var node0 = ::blueprint::nodes::subgraph::Subgraph()
node0.load_from_file(_editor, "../../../assets/blueprints/editorgraph/multi_rects_edit.ves")

_editor.add_node(node0, -206.14270105819, 122.8997297445)

var node1 = ::blueprint::nodes::array::Array()
node1.query_param("serialize").value = true

node1.list = [ ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Rect.init(-355, 264.5, 53, 51), { "fill" : true, "color" : ::maths::vector::Vector3(0.60412019491196, 0.60412019491196, 0) })), ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Rect.init(-160, 210.5, 34, 31), { "fill" : true, "color" : ::maths::vector::Vector3(0.60412019491196, 0.60412019491196, 0) })), ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Rect.init(-123.36960601807, 262.9873046875, 59.09090423584, 22.727264404297), { "fill" : true, "color" : ::maths::vector::Vector3(0.60412019491196, 0.60412019491196, 0) })), ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Rect.init(142.08494567871, 94.805473327637, 61.818176269531, 56.363639831543), { "fill" : true, "color" : ::maths::vector::Vector3(0.60412019491196, 0.60412019491196, 0) })), ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Circle.init(72.726364135742, 186.88743591309, 61.483478546143), { "fill" : true, "color" : ::maths::vector::Vector3(0.75072020292282, 0.39516466856003, 0) })), ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Rect.init(72.726364135742, 146.30128479004, 46.184234619141, 40.586135864258), { "fill" : true, "color" : ::maths::vector::Vector3(0.60412019491196, 0.60412019491196, 0) })), ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Circle.init(-114, 42.5, 117.7200088501), { "fill" : true, "color" : ::maths::vector::Vector3(0.75072020292282, 0.39516466856003, 0) })), ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Rect.init(-114, -14.5, 103, 57), { "fill" : true, "color" : ::maths::vector::Vector3(0.60412019491196, 0.60412019491196, 0) })), ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Rect.init(-712.00817871094, -259.43222045898, 1360.3305664062, 16.528930664062), { "fill" : true, "color" : ::maths::vector::Vector3(0.60412019491196, 0.60412019491196, 0) })), ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Circle.init(190.67204284668, 24.641435623169, 19.567531585693), { "fill" : true, "color" : ::maths::vector::Vector3(0.75072020292282, 0.39516466856003, 0) })), ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Rect.init(171.18486022949, 24.641435623169, 19.487167358398, 1.7715606689453), { "fill" : true, "color" : ::maths::vector::Vector3(0.60412019491196, 0.60412019491196, 0) })), ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Circle.init(-105, -287.5, 44.821868896484), { "fill" : true, "color" : ::maths::vector::Vector3(0.75072020292282, 0.39516466856003, 0) })), ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Rect.init(-105, -315.5, 35, 28), { "fill" : true, "color" : ::maths::vector::Vector3(0.60412019491196, 0.60412019491196, 0) })) ]

_editor.add_node(node1, -419.24009284015, 74.96481485708)

var node2 = ::blueprint::nodes::subgraph::Subgraph()
node2.load_from_file(_editor, "../../../assets/blueprints/editorgraph/multi_circles_edit.ves")

_editor.add_node(node2, -206.82207044315, 31.44789521222)

var node3 = ::geograph::nodes::rect::Rect()
node3.query_param("x").value = 205.11331731623
node3.query_param("y").value = 73.545454545455
node3.query_param("w").value = 50.181818181818
node3.query_param("h").value = 26.454545454545
node3.query_param("fill").value = true
node3.query_param("color").value.set(0.37751737236977, 0.18862846493721, 0.18862846493721)

_editor.add_node(node3, -888.06745154816, 87.923227453731)

var node4 = ::physicsgraph::nodes::body::Body()
node4.query_param("type").value = "dynamic"
node4.query_param("gravity").value = 1
node4.query_param("density").value = 1.0140340328217
node4.query_param("restitution").value = 0
node4.query_param("friction").value = 0.2

_editor.add_node(node4, -575.13150360076, -59.511839817)

var node5 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node5, -397.48221564633, -125.52880103543)

var node6 = ::geograph::nodes::circle::Circle()
node6.query_param("x").value = 0
node6.query_param("y").value = 0
node6.query_param("r").value = 26.628668186876
node6.query_param("fill").value = true
node6.query_param("color").value.set(1, 0, 0)

_editor.add_node(node6, -887.01555221638, -138.7173553719)

var node7 = ::geograph::nodes::rect::Rect()
node7.query_param("x").value = 130.68
node7.query_param("y").value = -93.17
node7.query_param("w").value = 24.98
node7.query_param("h").value = 50.39
node7.query_param("fill").value = true
node7.query_param("color").value.set(1, 0, 0)

_editor.add_node(node7, -880.97746315697, -367.54522238992)

var node8 = ::geograph::nodes::polyline::Polyline()
node8.query_param("vertices").value = [ -182.16249084473, -67.727104187012, -89.955673217773, -174.96022033691, 48.696060180664, -207.06184387207, 188.03080749512, -210.47691345215, 364.93127441406, -171.54515075684, 491.2887878418, -108.70790863037 ]
node8.query_param("closed").value = false

_editor.add_node(node8, -573.92566139915, -173.37170077237)

var node9 = ::geograph::nodes::line::Line()
node9.query_param("x0").value = -177.04958677686
node9.query_param("y0").value = -131.18181818182
node9.query_param("x1").value = 396.69421487603
node9.query_param("y1").value = -223.96694214876

_editor.add_node(node9, -576.13812588778, -280.89572753906)

var node10 = ::blueprint::nodes::subgraph::Subgraph()
node10.load_from_file(_editor, "../../../assets/blueprints/physicsgraph/world_sim.ves")
node10.set_prop_value("draw", true)

_editor.add_node(node10, -203.76402587891, -101.4066192627)

var node11 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node11, -718.76396484375, -32.006616210938)

Blueprint.connect(node3, "geo", node11, "in0")
Blueprint.connect(node6, "geo", node11, "in1")
Blueprint.connect(node7, "geo", node11, "in2")
Blueprint.connect(node11, "list", node4, "geos")
Blueprint.connect(node4, "bodies", node5, "in0")
Blueprint.connect(node8, "geo", node5, "in1")
Blueprint.connect(node9, "geo", node5, "in2")
Blueprint.connect(node5, "list", node10, "bodies")
Blueprint.connect(node1, "all", node2, "circles")
Blueprint.connect(node1, "all", node0, "rects")
