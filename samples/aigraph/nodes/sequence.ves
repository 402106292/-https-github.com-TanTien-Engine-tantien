var node0 = ::aigraph::nodes::behavior_tree::BehaviorTree()

_editor.add_node(node0, 302.35862666521, 102.1091595939)

var node1 = ::aigraph::nodes::sequence::Sequence()

_editor.add_node(node1, 145.21225574507, 57.189179204103)

var node2 = ::geograph::nodes::draw_geometry::DrawGeometry()

_editor.add_node(node2, 490.52386907253, 186.33029375167)

var node3 = ::geograph::nodes::circle::Circle()
node3.query_param("x").value = 0
node3.query_param("y").value = 0
node3.query_param("r").value = 100
node3.query_param("fill").value = false
node3.query_param("color").value.set(1, 0, 0)

_editor.add_node(node3, -320.42623168287, 138.97571017975)

var node4 = ::geograph::nodes::translate::Translate()
node4.query_param("dx").value = 1
node4.query_param("dy").value = 0

_editor.add_node(node4, -69.036295902598, 119.01122687734)

var node5 = ::geograph::nodes::translate::Translate()
node5.query_param("dx").value = 0
node5.query_param("dy").value = 1

_editor.add_node(node5, -67.226759350989, -0.69623862022213)

Blueprint.connect(node3, "geo", node5, "geo")
Blueprint.connect(node3, "geo", node4, "geo")
Blueprint.connect(node4, "next", node1, "child0")
Blueprint.connect(node5, "next", node1, "child1")
Blueprint.connect(node1, "parent", node0, "root")
Blueprint.connect(node0, "next", node2, "prev")
Blueprint.connect(node3, "geo", node2, "geos")
