var node0 = ::editorgraph::nodes::mouse_left_down::MouseLeftDown()

_editor.add_node(node0, -731.36339646432, 137.83556892324)

var node1 = ::blueprint::nodes::list_add::ListAdd()

_editor.add_node(node1, -175, 74.5)

var node2 = ::geograph::nodes::draw_geometry::DrawGeometry()

_editor.add_node(node2, -757.09192457951, 308.26872091901)

var node3 = ::geograph::nodes::circle::Circle()
node3.query_param("x").value = 0
node3.query_param("y").value = 0
node3.query_param("r").value = 11.111110687256
node3.query_param("fill").value = true
node3.query_param("color").value.set(1, 0.62222224473953, 0.53333336114883)

_editor.add_node(node3, -370.61983471074, -65.814049586777)

var node4 = ::blueprint::nodes::array::Array()
node4.query_param("serialize").value = true

node4.list = [ ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Circle.init(-155, 85, 11.111110687256), { "fill" : true, "color" : ::maths::vector::Vector3(1, 0, 0) })), ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Circle.init(-207.10433959961, -29.809476852417, 11.111110687256), { "fill" : true, "color" : ::maths::vector::Vector3(1, 0.62222224473953, 0) })), ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Circle.init(-329.30157470703, 25.099203109741, 11.111110687256), { "fill" : true, "color" : ::maths::vector::Vector3(1, 0.62222224473953, 0.53333336114883) })), ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Circle.init(-316.10159301758, -134.4008026123, 11.111110687256), { "fill" : true, "color" : ::maths::vector::Vector3(1, 0.62222224473953, 0.53333336114883) })), ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Circle.init(-115.21376800537, -62.492599487305, 11.111110687256), { "fill" : true, "color" : ::maths::vector::Vector3(1, 0.62222224473953, 0.53333336114883) })), ::blueprint::variant::Variant("geo", ::geograph::variant::VarGeo(::geometry::Circle.init(-107.51377105713, -14.092597961426, 11.111110687256), { "fill" : true, "color" : ::maths::vector::Vector3(1, 0.62222224473953, 0.53333336114883) })) ]

_editor.add_node(node4, -1152.5, 42.3)

var node5 = ::editorgraph::nodes::trigger::Trigger()

_editor.add_node(node5, -8.3321492380777, 155.54049910579)

var node6 = ::editorgraph::nodes::coord_trans::CoordTrans()

_editor.add_node(node6, -528.02475156719, 48.408867415407)

var node7 = ::blueprint::nodes::list_remove::ListRemove()

_editor.add_node(node7, -340.93050470526, -417.86266024503)

var node8 = ::blueprint::nodes::for_each::ForEach()

_editor.add_node(node8, 31.861305708452, -289.69723649459)

var node9 = ::geograph::nodes::is_contain::IsContain()

_editor.add_node(node9, -515.82259661439, -431.52568601177)

var node10 = ::editorgraph::nodes::trigger::Trigger()

_editor.add_node(node10, 189.99221435547, -207.41632080078)

var node11 = ::editorgraph::nodes::mouse_right_down::MouseRightDown()

_editor.add_node(node11, -866.7515405273, -310.36588806152)

var node12 = ::editorgraph::nodes::coord_trans::CoordTrans()

_editor.add_node(node12, -706.70155761719, -423.22587615967)

var node13 = ::blueprint::nodes::branch::Branch()

_editor.add_node(node13, -135.36156982422, -366.68587463379)

Blueprint.connect(node11, "pos", node12, "screen")
Blueprint.connect(node11, "event", node10, "event")
Blueprint.connect(node8, "next", node10, "action")
Blueprint.connect(node4, "all", node8, "in")
Blueprint.connect(node13, "next", node8, "do")
Blueprint.connect(node8, "out", node9, "geo")
Blueprint.connect(node12, "world", node9, "pos")
Blueprint.connect(node9, "out", node13, "cond")
Blueprint.connect(node7, "next", node13, "true")
Blueprint.connect(node4, "all", node7, "list")
Blueprint.connect(node8, "curr_idx", node7, "index")
Blueprint.connect(node4, "all", node2, "geos")
Blueprint.connect(node0, "pos", node6, "screen")
Blueprint.connect(node6, "world", node3, "center")
Blueprint.connect(node4, "all", node1, "list")
Blueprint.connect(node3, "new_geo", node1, "add")
Blueprint.connect(node0, "event", node5, "event")
Blueprint.connect(node1, "next", node5, "action")
