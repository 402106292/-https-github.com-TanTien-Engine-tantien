var node0 = Clear()

node0.masks = [ "color", "depth" ]
node0.values = { "color" : [ 0.1, 0.1, 0.1, 1 ] }

_editor.add_node(node0, -181.45454545455, 568.59090909091)

var node1 = Draw()

node1.set_prim_type("triangles")
node1.render_state = { "depth_test" : true, "depth_func" : "less", "cull" : "disable" }

_editor.add_node(node1, 83.101203966445, 431.01105550415)

var node2 = Shader()

node2.vs = "
#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec2 aTexCoords;

out vec2 TexCoords;

uniform UBO
{
	mat4 model;
	mat4 view;
	mat4 projection;
};

void main()
{
    TexCoords = aTexCoords;    
    gl_Position = projection * view * model * vec4(aPos, 1.0);
}
"
node2.fs = "
#version 330 core
out vec4 FragColor;

in vec2 TexCoords;

uniform sampler2D texture1;

void main()
{    
    FragColor = texture(texture1, TexCoords);
}
"
node2.execute()

_editor.add_node(node2, -164.03965761902, 389.53503742566)

var node3 = Camera3D()

node3.position.set(2.8401885346808, 3.4074242845055, 6.9675921212326)
node3.yaw = -102.4
node3.pitch = -31.7
node3.zoom = 45
node3.update_camera_vectors()
node3.speed = 0.17553623020649

_editor.add_node(node3, -617.0056622191, 681.89869496855)

var node4 = Perspective()

node4.fovy = 45
node4.aspect = 0
node4.znear = 0.1
node4.zfar = 100

_editor.add_node(node4, -592.25183128148, 509.99043217132)

var node5 = VertexArray()

node5.data = [ 5, -0.5, 5, 2, 0, -5, -0.5, 5, 0, 0, -5, -0.5, -5, 0, 2, 5, -0.5, 5, 2, 0, -5, -0.5, -5, 0, 2, 5, -0.5, -5, 2, 2 ]
node5.attrs = [ 3, 2 ]

_editor.add_node(node5, -298.56524639287, 169.80069776803)

var node6 = Texture()
node6.gamma_correction = false
node6.init_texture("resources/textures/metal.png")
node6.set_sampler("linear repeat")

_editor.add_node(node6, -1092.7043569593, 485.30749424769)

var node7 = Merge()

_editor.add_node(node7, -143.3981628418, 29.329940795898)

var node8 = PrimitiveShape()

node8.type = "cube"
node8.layout = [ "position", "texture" ]

_editor.add_node(node8, -299.85587693749, 22.904105807213)

var node9 = Texture()
node9.gamma_correction = false
node9.init_texture("resources/textures/container.jpg")
node9.set_sampler("linear repeat")

_editor.add_node(node9, -1089.977084232, 139.85294879314)

var node10 = Merge()

_editor.add_node(node10, -849.4560978516, 244.10019737305)

var node11 = Matrix()

_editor.add_node(node11, -658.90679931641, 150.671875)

var node12 = Translate()

node12.dx = -1
node12.dy = 0
node12.dz = -1

_editor.add_node(node12, -656.42981933594, 53.518882446289)

var node13 = Translate()

node13.dx = 2
node13.dy = 0
node13.dz = 0

_editor.add_node(node13, -655.21981933594, -88.051117553712)

var node14 = Merge()

_editor.add_node(node14, -484.14837646484, 10.860900878905)

var node15 = Pass()

node15.once = false

_editor.add_node(node15, 590.74817311185, 498.43137227208)

var node16 = RenderTarget()

node16.width = 1024
node16.height = 1024

_editor.add_node(node16, 446.08815631409, 340.97646638245)

var node17 = Texture()
node17.gamma_correction = false
node17.init_texture(1024, 1024, "rgb")
node17.set_sampler("linear repeat")

_editor.add_node(node17, 110.81105957031, 230.89253540039)

var node18 = RenderBuffer()

node18.init_rbo(1024, 1024, "depth_component")

_editor.add_node(node18, 287.43395453183, 328.90951873689)

var node19 = Draw()

node19.set_prim_type("tri_strip")
node19.render_state = { "stencil_test" : false, "stencil_func" : "always", "stencil_mask" : 255, "cull" : "disable", "stencil_ref" : 0, "depth_test" : false, "depth_func" : "less" }

_editor.add_node(node19, 701.03755867714, -471.60051400917)

var node20 = Clear()

node20.masks = [ "color" ]
node20.values = { "color" : [ 255, 255, 255, 255 ] }

_editor.add_node(node20, 466.02958685499, -377.59150042612)

var node21 = Shader()

node21.vs = "
#version 330 core
layout (location = 0) in vec2 aPos;
layout (location = 1) in vec2 aTexCoords;

out vec2 TexCoords;

void main()
{
    TexCoords = aTexCoords;
    gl_Position = vec4(aPos.x, aPos.y, 0.0, 1.0); 
}  
"
node21.fs = "
#version 330 core
out vec4 FragColor;

in vec2 TexCoords;

uniform sampler2D screenTexture;

void main()
{
    vec3 col = texture(screenTexture, TexCoords).rgb;
    FragColor = vec4(col, 1.0);
} 
"
node21.execute()

_editor.add_node(node21, 457.24092062239, -485.2723367816)

var node22 = PrimitiveShape()

node22.type = "quad"
node22.layout = [ "position", "texture" ]

_editor.add_node(node22, 495.48966341323, -587.72433516375)

Blueprint.connect(node0.exports[0], node1.imports[0])
Blueprint.connect(node1.exports[0], node15.imports[0])
Blueprint.connect(node2.exports[0], node1.imports[1])
Blueprint.connect(node3.exports[0], node2.imports[1])
Blueprint.connect(node3.exports[1], node4.imports[0])
Blueprint.connect(node4.exports[0], node2.imports[2])
Blueprint.connect(node5.exports[0], node7.imports[0])
Blueprint.connect(node6.exports[0], node10.imports[0])
Blueprint.connect(node7.exports[0], node1.imports[2])
Blueprint.connect(node8.exports[0], node7.imports[1])
Blueprint.connect(node9.exports[0], node10.imports[1])
Blueprint.connect(node10.exports[0], node2.imports[3])
Blueprint.connect(node11.exports[0], node14.imports[0])
Blueprint.connect(node12.exports[0], node14.imports[1])
Blueprint.connect(node13.exports[0], node14.imports[2])
Blueprint.connect(node14.exports[0], node2.imports[0])
Blueprint.connect(node16.exports[0], node15.imports[1])
Blueprint.connect(node17.exports[0], node16.imports[0])
Blueprint.connect(node17.exports[0], node21.imports[0])
Blueprint.connect(node18.exports[0], node16.imports[4])
Blueprint.connect(node20.exports[0], node19.imports[0])
Blueprint.connect(node21.exports[0], node19.imports[1])
Blueprint.connect(node22.exports[0], node19.imports[2])
