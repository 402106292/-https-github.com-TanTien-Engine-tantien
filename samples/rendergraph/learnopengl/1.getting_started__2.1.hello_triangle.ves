var node0 = ::rendergraph::nodes::clear::Clear()

node0.masks = [ "color", "depth" ]
node0.values = { "color" : [ 0.2, 0.3, 0.3, 1 ] }

_editor.add_node(node0, -278.34741168946, 104.30134553651)

var node1 = ::rendergraph::nodes::draw::Draw()

node1.set_prim_type("triangles")
node1.render_state = { "depth_test" : true, "cull" : "disable" }
node1.skip = false

_editor.add_node(node1, 134, 19)

var node2 = ::rendergraph::nodes::shader::Shader()

node2.vs = "
#version 330 core
layout (location = 0) in vec3 aPos;
void main()
{
    gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);
}
"
node2.tcs = ""
node2.tes = ""
node2.gs = ""
node2.fs = "
#version 330 core
out vec4 FragColor;
void main()
{
    FragColor = vec4(1.0f, 0.5f, 0.2f, 1.0f);
}
"
node2.cs = ""
node2.render_gen()

_editor.add_node(node2, -65.392515414372, 51.059502890389)

var node3 = ::rendergraph::nodes::vertex_array::VertexArray()

node3.data = [ -0.5, -0.5, 0, 0.5, -0.5, 0, 0, 0.5, 0 ]
node3.attrs = [ 3 ]

_editor.add_node(node3, -60.666987476017, -18.92706037218)

Blueprint.connect(node0, "next", node1, "prev")
Blueprint.connect(node2, "out", node1, "shader")
Blueprint.connect(node3, "out", node1, "va")
