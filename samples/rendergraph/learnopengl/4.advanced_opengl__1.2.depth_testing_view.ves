var node0 = Clear()

node0.masks = [ "depth", "color" ]
node0.values = { "color" : [ 0.1, 0.1, 0.1, 1 ] }

_editor.add_node(node0, -181.45454545455, 568.59090909091)

var node1 = Draw()

node1.set_prim_type("triangles")
node1.render_state = { "depth_test" : true, "depth_func" : "less", "cull" : "disable" }

_editor.add_node(node1, 56.80518593489, 434.01631470776)

var node2 = Shader()

node2.vs = "
#version 330 core
layout (location = 0) in vec3 aPos;

uniform UBO
{
	mat4 model;
	mat4 view;
	mat4 projection;	
};

void main()
{
    gl_Position = projection * view * model * vec4(aPos, 1.0);
}
"
node2.fs = "
#version 330 core
out vec4 FragColor;

float near = 0.1; 
float far = 100.0; 
float LinearizeDepth(float depth) 
{
    float z = depth * 2.0 - 1.0; // back to NDC 
    return (2.0 * near * far) / (far + near - z * (far - near));	
}

void main()
{             
    float depth = LinearizeDepth(gl_FragCoord.z) / far; // divide by far to get depth in range [0,1] for visualization purposes
    FragColor = vec4(vec3(depth), 1.0);
}
"
node2.gs = ""
node2.execute()

_editor.add_node(node2, -164.03965761902, 389.53503742566)

var node3 = Camera3D()

node3.position.set(4.1498765330915, 9.8766539658422, 13.269100888032)
node3.yaw = -106.3
node3.pitch = -39.1
node3.zoom = 45
node3.update_camera_vectors()
node3.speed = 0.17553623020649

_editor.add_node(node3, -617.0056622191, 680.20527317839)

var node4 = Perspective()

node4.fovy = 45
node4.aspect = 0
node4.znear = 0.1
node4.zfar = 100

_editor.add_node(node4, -592.25183128148, 509.99043217132)

var node5 = VertexArray()

node5.data = [ 5, -0.5, 5, 2, 0, -5, -0.5, 5, 0, 0, -5, -0.5, -5, 0, 2, 5, -0.5, 5, 2, 0, -5, -0.5, -5, 0, 2, 5, -0.5, -5, 2, 2 ]
node5.attrs = [ 3, 2 ]

_editor.add_node(node5, -298.56524639287, 169.80069776803)

var node6 = Merge()

_editor.add_node(node6, -143.3981628418, 29.329940795898)

var node7 = PrimitiveShape()

node7.type = "cube"
node7.layout = [ "position", "texture" ]

_editor.add_node(node7, -299.85587693749, 22.904105807213)

var node8 = Matrix()

_editor.add_node(node8, -658.90679931641, 150.671875)

var node9 = Translate()

node9.dx = -1
node9.dy = 0
node9.dz = -1

_editor.add_node(node9, -656.42981933594, 53.518882446289)

var node10 = Translate()

node10.dx = 2
node10.dy = 0
node10.dz = 0

_editor.add_node(node10, -655.21981933594, -88.051117553712)

var node11 = Merge()

_editor.add_node(node11, -484.14837646484, 10.860900878905)

Blueprint.connect(node0, "next", node1, "prev")
Blueprint.connect(node2, "out", node1, "shader")
Blueprint.connect(node3, "mat", node2, "view")
Blueprint.connect(node3, "zoom", node4, "fovy")
Blueprint.connect(node4, "mat", node2, "projection")
Blueprint.connect(node5, "out", node6, "in0")
Blueprint.connect(node6, "list", node1, "va")
Blueprint.connect(node7, "out", node6, "in1")
Blueprint.connect(node8, "mat", node11, "in0")
Blueprint.connect(node9, "mat", node11, "in1")
Blueprint.connect(node10, "mat", node11, "in2")
Blueprint.connect(node11, "list", node2, "model")
