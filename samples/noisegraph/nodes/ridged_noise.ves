
import "blueprint.blueprint" for Blueprint
import "blueprint.nodes.*"

import "rendergraph.nodes.*"
import "shadergraph.nodes.*"

import "noisegraph.nodes.*"
var node0 = TexCoord()

_editor.add_node(node0, -188, 50)

var node1 = Multiply()

_editor.add_node(node1, -28, -6)

var node2 = Number()

node2.value = 10

_editor.add_node(node2, -352, -69)

var node3 = Uniform()
node3.query_param("unif_name").value = "unif_0"

_editor.add_node(node3, -198, -54.5)

var node4 = RidgedNoise()
node4.query_param("seed").value = 0

_editor.add_node(node4, 132.6692823863, -32.460381152781)

var node5 = Combine()

_editor.add_node(node5, 298.52256740785, 0.79922291976649)

var node6 = Subgraph()
node6.load_from_file(_editor, "../../../assets/blueprints/shadergraph/draw_screen.ves")

_editor.add_node(node6, 484.79896066389, 28.74067606183)

var node7 = Texture()
node7.query_param("unif_name").value = "perlin_perm2d_tex"
node7.gamma_correction = false
node7.init_texture("../../../assets/textures/noise/perlin_perm2d.png")
node7.set_sampler("nearest_repeat")

_editor.add_node(node7, -286.76861415894, -178.0022013794)

var node8 = Texture()
node8.query_param("unif_name").value = "perlin_grad2d_tex"
node8.gamma_correction = false
node8.init_texture("../../../assets/textures/noise/perlin_grad2d.png")
node8.set_sampler("nearest_repeat")

_editor.add_node(node8, -57.027715885009, -173.48641262024)

Blueprint.connect(node2, "v", node3, "v")
Blueprint.connect(node0, "uv", node1, "a")
Blueprint.connect(node3, "v", node1, "b")
Blueprint.connect(node1, "v", node4, "p")
Blueprint.connect(node7, "tex", node4, "perlin_perm2d_tex")
Blueprint.connect(node8, "tex", node4, "perlin_grad2d_tex")
Blueprint.connect(node4, "ret", node5, "grey")
Blueprint.connect(node5, "xyz", node6, "rgb")
