
import "blueprint.blueprint" for Blueprint
import "blueprint.nodes.*"

import "rendergraph.nodes.*"
import "shadergraph.nodes.*"
import "pbrgraph.nodes.*"
var node0 = Draw()

node0.set_prim_type("triangles")
node0.render_state = { "stencil_test" : false, "rasterization" : "fill", "stencil_func" : "always", "stencil_mask" : 255, "cull" : "disable", "stencil_ref" : 0, "depth_test" : true, "depth_func" : "less", "clip_plane" : false }
node0.skip = false

_editor.add_node(node0, 577.9081115024, -145.65588478212)

var node1 = Shadergraph()

_editor.add_node(node1, 424.49717791884, -9.1124304335698)

var node2 = Clear()

node2.masks = [ "depth", "color" ]
node2.values = { "color" : [ 126.3501739502, 128, 127.39208984375, 255 ] }

_editor.add_node(node2, 421.47410660314, 147.1298236458)

var node3 = Camera3d()

node3.cam.position.set(0, 0, 3)
node3.cam.yaw = -90
node3.cam.pitch = 0
node3.cam.zoom = 8
node3.cam.update_vectors()
node3.speed = 0.01

_editor.add_node(node3, -62.33101768433, 188.53950639348)

var node4 = Perspective()

node4.fovy = 8
node4.aspect = 0
node4.znear = 0.1
node4.zfar = 100

_editor.add_node(node4, 106.86026008525, 177.98239618581)

var node5 = Gltf()
node5.init_model("assets/models/WaterBottle/WaterBottle.gltf")

_editor.add_node(node5, -272.14291047037, 50.81682942184)

var node6 = Expand()

_editor.add_node(node6, -71.09327934477, 51.00359339471)

var node7 = OrbitCamera()
node7.query_param("speed").value = 0.049697365611792

_editor.add_node(node7, -38.47276660161, -5.9049079966933)

var node8 = Number3()

node8.value.set(4.9503307342529, 9.0614423751831, 2.7281086444855)

_editor.add_node(node8, -191.55297192515, -93.062159986518)

var node9 = Subtract()

_editor.add_node(node9, -39.21134523985, -141.3116745133)

var node10 = Number3()

node10.value.set(5.4388632774353, 5.1295571327209, 5.5166964530945)

_editor.add_node(node10, -191.11318272685, -203.11190130937)

var node11 = Number3()

node11.value.set(0.3131103515625, 0, 0)

_editor.add_node(node11, -256.90152621915, -336.81445607655)

var node12 = Subtract()

_editor.add_node(node12, -60.01267539105, -355.57596870535)

var node13 = Number3()

node13.value.set(0, 0, 0)

_editor.add_node(node13, -256.75153274115, -440.96180683225)

var node14 = Number()

node14.value = 0

_editor.add_node(node14, -54.75163068098, -281.63049672101)

var node15 = Subgraph()
node15.load_from_file(_editor, "../../../assets/blueprints/pbrgraph/anisotropy.ves")

_editor.add_node(node15, 192.29579654121, -75.71365114702)

Blueprint.connect(node14, "v", node15, "anisotropic")
Blueprint.connect(node13, "v3", node12, "b")
Blueprint.connect(node11, "v3", node12, "a")
Blueprint.connect(node12, "v", node15, "anisotropic_dir")
Blueprint.connect(node10, "v3", node9, "b")
Blueprint.connect(node8, "v3", node9, "a")
Blueprint.connect(node9, "v", node15, "light_pos")
Blueprint.connect(node7, "mat", node15, "local_mat")
Blueprint.connect(node5, "desc", node6, "data")
Blueprint.connect(node6, "WaterBottle", node15, "model")
Blueprint.connect(node3, "mat", node1, "view")
Blueprint.connect(node3, "zoom", node4, "fovy")
Blueprint.connect(node3, "pos", node15, "cam_pos")
Blueprint.connect(node15, "frag_out", node1, "rgba")
Blueprint.connect(node15, "model_mat", node1, "model")
Blueprint.connect(node15, "va", node0, "va")
Blueprint.connect(node4, "mat", node1, "projection")
Blueprint.connect(node1, "shader", node0, "shader")
Blueprint.connect(node2, "next", node0, "prev")
