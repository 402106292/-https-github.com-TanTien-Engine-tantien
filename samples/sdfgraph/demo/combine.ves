var node0 = Sdf()
node0.query_param("eye").value.set(8, 5, 7)

_editor.add_node(node0, 387.994, -356.247)

var node1 = FragColor()

_editor.add_node(node1, 547.994, -358.247)

var node2 = TexCoord()

_editor.add_node(node2, 239.994, -298.247)

var node3 = Parameter()

node3.var_name = "p"

_editor.add_node(node3, -1478.6381523164, -829.14305222864)

var node4 = Viewport()

_editor.add_node(node4, 240.994, -351.247)

var node5 = Union()

_editor.add_node(node5, -380.79856563132, -185.80644044992)

var node6 = Sphere()
node6.query_param("s").value = 0.5

_editor.add_node(node6, -561.10665009477, -147.67683561295)

var node7 = Number()

node7.value = 0.3

_editor.add_node(node7, -1339.0242245585, -511.23357255156)

var node8 = Translate()
node8.query_param("offset").value.set(0, 0, 0)

_editor.add_node(node8, -701.28717710889, -138.06698574098)

var node9 = Combine()

_editor.add_node(node9, -855.08958354807, -159.94215577674)

var node10 = Number()

node10.value = 1.2

_editor.add_node(node10, -1340.3484009139, -401.97300247209)

var node11 = Sphere()
node11.query_param("s").value = 0.69386053085327

_editor.add_node(node11, -558.93956519619, -262.75980330642)

var node12 = Translate()
node12.query_param("offset").value.set(2.5, 0, 0)

_editor.add_node(node12, -697.80378867914, -255.50983322408)

var node13 = Combine()

_editor.add_node(node13, -857.20499301463, -275.32564939057)

var node14 = Negate()

_editor.add_node(node14, -1004.6474732724, -132.68917973398)

var node15 = Union()

_editor.add_node(node15, -378.54462122862, -422.47060273392)

var node16 = Sphere()
node16.query_param("s").value = 0.5

_editor.add_node(node16, -559.60402049297, -400.11860871588)

var node17 = Translate()
node17.query_param("offset").value.set(0, 0, 0)

_editor.add_node(node17, -699.78454750709, -390.50875884391)

var node18 = Combine()

_editor.add_node(node18, -859.59747235348, -410.12998447697)

var node19 = Sphere()
node19.query_param("s").value = 1

_editor.add_node(node19, -552.92904678898, -506.93711359943)

var node20 = Translate()
node20.query_param("offset").value.set(2.5, 0, 0)

_editor.add_node(node20, -697.80378867914, -496.75701579357)

var node21 = Combine()

_editor.add_node(node21, -848.94053020472, -511.98981167457)

var node22 = Negate()

_editor.add_node(node22, -1013.6632508832, -381.3743788324)

var node23 = Union()

_editor.add_node(node23, -250.00821906476, -292.70924490937)

var node24 = Union()

_editor.add_node(node24, -384.7775288169, -635.65692880454)

var node25 = Sphere()
node25.query_param("s").value = 0.5

_editor.add_node(node25, -560.83692808125, -620.3049347865)

var node26 = Translate()
node26.query_param("offset").value.set(0, 0, 0)

_editor.add_node(node26, -701.01745509537, -610.69508491453)

var node27 = Combine()

_editor.add_node(node27, -860.83037994176, -630.31631054759)

var node28 = Sphere()
node28.query_param("s").value = 1

_editor.add_node(node28, -554.16195437726, -727.12343967005)

var node29 = Translate()
node29.query_param("offset").value.set(2.5, 0, 0)

_editor.add_node(node29, -699.03669626742, -716.1168955832)

var node30 = Combine()

_editor.add_node(node30, -850.173437793, -732.17613774519)

var node31 = Negate()

_editor.add_node(node31, -1014.8961584715, -601.56070490302)

var node32 = Union()

_editor.add_node(node32, -84.720712338011, -367.63130539312)

var node33 = Sphere()
node33.query_param("s").value = 1.2

_editor.add_node(node33, -746.01706966684, -898.17624380569)

var node34 = Box()
node34.query_param("b").value.set(0.9, 0.9, 0.9)

_editor.add_node(node34, -746.84347458516, -988.72643503465)

var node35 = Intersection()

_editor.add_node(node35, -557.70473941703, -928.18058202685)

var node36 = VertCappedCylinder()
node36.query_param("h").value = 1
node36.query_param("r").value = 0.5

_editor.add_node(node36, -872.4204626162, -1132.5300290447)

var node37 = Union()

_editor.add_node(node37, -700.02082002519, -1211.3260828423)

var node38 = VertCappedCylinder()
node38.query_param("h").value = 0.8
node38.query_param("r").value = 0.5

_editor.add_node(node38, -871.5940163352, -1273.8523430942)

var node39 = Number()

node39.value = 2

_editor.add_node(node39, -1259.6110362018, -1191.0981080483)

var node40 = Number()

node40.value = 0.5

_editor.add_node(node40, -1257.0979743115, -1272.2505946875)

var node41 = Rotate()
node41.query_param("theta").value = 1.57
node41.query_param("axis").value = 0

_editor.add_node(node41, -1027.7387787443, -1250.8704200579)

var node42 = VertCappedCylinder()
node42.query_param("h").value = 0.8
node42.query_param("r").value = 0.5

_editor.add_node(node42, -863.00503358253, -1426.2175468105)

var node43 = Rotate()
node43.query_param("theta").value = 1.57
node43.query_param("axis").value = 2

_editor.add_node(node43, -1019.1497959916, -1403.2356237742)

var node44 = Union()

_editor.add_node(node44, -553.62458599813, -1272.5831722627)

var node45 = Subtraction()

_editor.add_node(node45, -367.87045363749, -1078.8741127203)

var node46 = Union()

_editor.add_node(node46, 87.082006835937, -456.77059326172)

Blueprint.connect(node0, "ret", node1, "rgb")
Blueprint.connect(node2, "uv", node0, "st")
Blueprint.connect(node3, "var", node8, "in")
Blueprint.connect(node3, "var", node12, "in")
Blueprint.connect(node3, "var", node17, "in")
Blueprint.connect(node3, "var", node20, "in")
Blueprint.connect(node3, "var", node26, "in")
Blueprint.connect(node3, "var", node29, "in")
Blueprint.connect(node3, "var", node33, "p")
Blueprint.connect(node3, "var", node34, "p")
Blueprint.connect(node3, "var", node36, "p")
Blueprint.connect(node3, "var", node41, "in")
Blueprint.connect(node3, "var", node43, "in")
Blueprint.connect(node4, "size", node0, "screen_size")
Blueprint.connect(node5, "ret", node23, "d1")
Blueprint.connect(node6, "ret", node5, "d1")
Blueprint.connect(node7, "v", node6, "s")
Blueprint.connect(node7, "v", node11, "s")
Blueprint.connect(node7, "v", node16, "s")
Blueprint.connect(node7, "v", node19, "s")
Blueprint.connect(node7, "v", node25, "s")
Blueprint.connect(node7, "v", node28, "s")
Blueprint.connect(node8, "out", node6, "p")
Blueprint.connect(node9, "xyz", node8, "offset")
Blueprint.connect(node10, "v", node14, "v")
Blueprint.connect(node10, "v", node22, "v")
Blueprint.connect(node10, "v", node21, "y")
Blueprint.connect(node10, "v", node31, "v")
Blueprint.connect(node10, "v", node30, "z")
Blueprint.connect(node10, "v", node13, "x")
Blueprint.connect(node11, "ret", node5, "d2")
Blueprint.connect(node12, "out", node11, "p")
Blueprint.connect(node13, "xyz", node12, "offset")
Blueprint.connect(node14, "v", node9, "x")
Blueprint.connect(node15, "ret", node23, "d2")
Blueprint.connect(node16, "ret", node15, "d1")
Blueprint.connect(node17, "out", node16, "p")
Blueprint.connect(node18, "xyz", node17, "offset")
Blueprint.connect(node19, "ret", node15, "d2")
Blueprint.connect(node20, "out", node19, "p")
Blueprint.connect(node21, "xyz", node20, "offset")
Blueprint.connect(node22, "v", node18, "y")
Blueprint.connect(node23, "ret", node32, "d1")
Blueprint.connect(node24, "ret", node32, "d2")
Blueprint.connect(node25, "ret", node24, "d1")
Blueprint.connect(node26, "out", node25, "p")
Blueprint.connect(node27, "xyz", node26, "offset")
Blueprint.connect(node28, "ret", node24, "d2")
Blueprint.connect(node29, "out", node28, "p")
Blueprint.connect(node30, "xyz", node29, "offset")
Blueprint.connect(node31, "v", node27, "z")
Blueprint.connect(node32, "ret", node46, "d1")
Blueprint.connect(node33, "ret", node35, "d1")
Blueprint.connect(node34, "ret", node35, "d2")
Blueprint.connect(node35, "ret", node45, "d1")
Blueprint.connect(node36, "ret", node37, "d1")
Blueprint.connect(node37, "ret", node44, "d1")
Blueprint.connect(node38, "ret", node37, "d2")
Blueprint.connect(node39, "v", node36, "h")
Blueprint.connect(node39, "v", node38, "h")
Blueprint.connect(node39, "v", node42, "h")
Blueprint.connect(node40, "v", node36, "r")
Blueprint.connect(node40, "v", node38, "r")
Blueprint.connect(node40, "v", node42, "r")
Blueprint.connect(node41, "out", node38, "p")
Blueprint.connect(node42, "ret", node44, "d2")
Blueprint.connect(node43, "out", node42, "p")
Blueprint.connect(node44, "ret", node45, "d2")
Blueprint.connect(node45, "ret", node46, "d2")
Blueprint.connect(node46, "ret", node0, "f_scene(p)")
