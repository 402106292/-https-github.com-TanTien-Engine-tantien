
import "blueprint.blueprint" for Blueprint
import "blueprint.nodes.*"

import "rendergraph.nodes.*"
import "shadergraph.nodes.*"
import "pixelgraph.nodes.*"
var node0 = Shadergraph()

_editor.add_node(node0, 90.434213028653, -39.366586214838)

var node1 = Draw()

node1.set_prim_type("tri_strip")
node1.render_state = { "stencil_test" : false, "rasterization" : "fill", "stencil_func" : "always", "stencil_mask" : 255, "cull" : "disable", "blend" : false, "stencil_ref" : 0, "depth_test" : false, "depth_func" : "less", "clip_plane" : true }
node1.skip = false

_editor.add_node(node1, 253.19987589051, -151.12763916689)

var node2 = PrimitiveShape()

node2.type = "quad"
node2.layout = [ "position", "texture" ]
node2.shape_params = {  }

_editor.add_node(node2, 94.53926939514, -169.71186859865)

var node3 = SampleTexture()

_editor.add_node(node3, -475.27187287565, 68.32798483889)

var node4 = TexCoord()

_editor.add_node(node4, -636.18193490016, 32.08917411154)

var node5 = Texture()
node5.query_param("unif_name").value = "u_tex"
node5.gamma_correction = false
node5.init_texture("../../rendergraph/learnopengl/resources/textures/bricks2.jpg")
node5.set_sampler("linear_repeat")

_editor.add_node(node5, -735.09629405629, 332.86247909168)

var node6 = Combine()

_editor.add_node(node6, -107, -36.5)

var node7 = Contrast()
node7.query_param("contrast").value = 2.0606722831726

_editor.add_node(node7, -320.03948284746, 78.210555369992)

Blueprint.connect(node5, "tex", node3, "tex")
Blueprint.connect(node4, "uv", node3, "uv")
Blueprint.connect(node3, "rgb", node7, "col")
Blueprint.connect(node7, "ret", node6, "xyz")
Blueprint.connect(node6, "xyzw", node0, "rgba")
Blueprint.connect(node0, "shader", node1, "shader")
Blueprint.connect(node2, "out", node1, "va")
