import "shadergraph.node_helper" for NodeHelper
import "blueprint.nodes.combine" for Combine as bp_Combine

class Combine is bp_Combine
{
	init()
	{
		super.init()	
	}

	calc_inst(gen, idx, module, func)
	{
		var x = NodeHelper.calc_input_inst(gen, this, "x", module, func)
		if (!x) {
			x = gen.module_const_float(module, 0.0)
		}
		var y = NodeHelper.calc_input_inst(gen, this, "y", module, func)
		if (!y) {
			y = gen.module_const_float(module, 0.0)
		}
		var z = NodeHelper.calc_input_inst(gen, this, "z", module, func)
		if (!z) {
			z = gen.module_const_float(module, 0.0)
		}
		var w = NodeHelper.calc_input_inst(gen, this, "w", module, func)
		if (!w) {
			w = gen.module_const_float(module, 0.0)
		}

		if (idx == 0) {
			return gen.compose_float4(func, x, y, z, w)
		} else if (idx == 1) {
			return gen.compose_float3(func, x, y, z)
		} else if (idx == 2) {
			return gen.compose_float2(func, x, y)
		}
	}
}