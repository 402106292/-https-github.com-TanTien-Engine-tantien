import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.variant" for VAR_TYPE_ANY
import "blueprint.node_param" for NodeParam

class Uniform is Node
{
	init()
	{
		super.init(Uniform.name)

		this.imports = [
			Pin(this, "v", VAR_TYPE_ANY)
		]
		this.exports = [
			Pin(this, "v", VAR_TYPE_ANY)
		]

		this.layout()

		this.params.add(NodeParam("unif_name", ""))
		this.params.add(NodeParam("unif_type", "float"))

		this.unif = nil
	}

    gen_shader(gen)
    {
    	this.unif = nil
    }

	calc_inst(gen, idx, module, func) 
	{
		if (!this.unif) 
		{
			var name = "unif_%(gen.get_unif_num())"
			this.query_param("unif_name").value = name

			var type = this.query_param("unif_type").value

			this.unif = gen.add_uniform(module, name, type)
		}
		return gen.load(func, this.unif)
	}
}