import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.variant" for VAR_TYPE_NUMBER, VAR_TYPE_NUMBER2
import "blueprint.blueprint" for Blueprint

class TexCoord is Node
{
	init()
	{
		super.init(TexCoord.name)	

		this.imports = [
			Pin(this, "set_id", VAR_TYPE_NUMBER),
		]
		this.exports = [
			Pin(this, "uv", VAR_TYPE_NUMBER2),
		]

		this.layout()

		this.inst = nil
	}

	shader_gen(ctx)
	{
		super.shader_gen(ctx)

		var v_set_id = Blueprint.calc_input_value(this, 0)
		if (v_set_id and v_set_id.value != 0) {
			this.inst = ctx.gen.add_input("TexCoord2", "vec2")
		} else {
			this.inst = ctx.gen.add_input("TexCoord", "vec2")
		}
	}

	calc_inst(idx, ctx) 
	{
		return ctx.bb.load(this.inst)
	}

	shader_gen2(node, idx)
	{
		var inst = nil

		var global = node.find_value("global")
		var v_set_id = Blueprint.calc_input_value(this, 0)
		if (v_set_id and v_set_id.value != 0) 
		{
			inst = global.variants["TexCoord2"]
			if (!inst) {
				inst = global.gen.add_input("TexCoord2", "vec2")
				global.variants["TexCoord2"] = inst
			}
		} 
		else 
		{
			inst = global.variants["TexCoord"]
			if (!inst) {
				inst = global.gen.add_input("TexCoord", "vec2")
				global.variants["TexCoord"] = inst
			}
		}

		var bb = node.find_value("bb")
		return bb.load(inst)
	}
}