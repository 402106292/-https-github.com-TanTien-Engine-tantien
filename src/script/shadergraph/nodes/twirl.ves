import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction
import "maths.vector" for Vector2

var CODE = "
vec2 twirl(vec2 uv, vec2 center, float strength, vec2 offset)
{
    vec2 delta = uv - center;
    float angle = strength * length(delta);
    float x = cos(angle) * delta.x - sin(angle) * delta.y;
    float y = sin(angle) * delta.x + cos(angle) * delta.y;
    return vec2(x + center.x + offset.x, y + center.y + offset.y);
}
"

class Twirl is Node
{
	init() 
	{
		super.init(Twirl.name)

		this.node_func = NodeFunction(this, CODE, "twirl", [
			["center", Vector2(0.5, 0.5)],
			["strength", 1.0, { "region" : 20 }],
			["offset", Vector2(0.0, 0.0)],
		])
	}
}