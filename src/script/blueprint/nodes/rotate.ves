import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.variant" for Variant, VAR_TYPE_NUMBER, VAR_TYPE_MATRIX4
import "blueprint.node_layout" for DEFAULT_HEIGHT
import "gui" for GUI
import "maths.vector" for Vector3
import "maths" for Matrix44
import "math" for Math

class Rotate is Node
{
	init()
	{
		super.init(Rotate.name)

		this.imports = [
			Pin(this, "mat", VAR_TYPE_MATRIX4),
			Pin(this, "angle", VAR_TYPE_NUMBER),
		]
		this.exports = [
			Pin(this, "mat", VAR_TYPE_MATRIX4),
		]

		this.layout()

		this.angle = 0
		this.axis_x = 0
		this.axis_y = 0
		this.axis_z = 0
	}

	calc(idx) 
	{
		var mat = Matrix44.init()
		var conns = this.imports[0].conns
		if (!conns.isEmpty) {
			var f_pin = conns.front().from
			mat = f_pin.node.calc(f_pin.slot_idx).value
		}

		conns = this.imports[1].conns
		if (!conns.isEmpty) {
			var f_pin = conns.front().from
			this.angle = f_pin.node.calc(f_pin.slot_idx).value
		}

		mat.rotateAxis(Math.radians(this.angle), this.axis_x, this.axis_y, this.axis_z)
		return Variant(VAR_TYPE_MATRIX4, mat)
	}

	layout()
	{
		super.layout()

		this.style.width = 150
		this.style.height = this.style.height + DEFAULT_HEIGHT * 4
	}

	toString(name) {
		return "
%(name).angle = %(this.angle)
%(name).axis_x = %(this.axis_x)
%(name).axis_y = %(this.axis_y)
%(name).axis_z = %(this.axis_z)
"
	}

	drawGUI(ctx) 
	{
		var dirty = false

		var x = this.pos.x - this.style.width * 0.5
		var y = this.pos.y + this.style.height * 0.5 - this.calcPanelHeight() - DEFAULT_HEIGHT

		var angle = GUI.slider(ctx, "angle", this.angle, x, y, this.style.width - 50, 360, false)
		if (angle != this.angle) {
			this.angle = angle
			dirty = true
		}
		y = y - DEFAULT_HEIGHT

		var REGION = 1

		var axis_x = GUI.slider(ctx, "axis_x", this.axis_x, x, y, this.style.width - 50, REGION, false)
		if (axis_x != this.axis_x) {
			this.axis_x = axis_x
			dirty = true
		}
		y = y - DEFAULT_HEIGHT

		var axis_y = GUI.slider(ctx, "axis_y", this.axis_y, x, y, this.style.width - 50, REGION, false)
		if (axis_y != this.axis_y) {
			this.axis_y = axis_y
			dirty = true
		}
		y = y - DEFAULT_HEIGHT

		var axis_z = GUI.slider(ctx, "axis_z", this.axis_z, x, y, this.style.width - 50, REGION, false)
		if (axis_z != this.axis_z) {
			this.axis_z = axis_z
			dirty = true
		}
		y = y - DEFAULT_HEIGHT

		return dirty
	}
}