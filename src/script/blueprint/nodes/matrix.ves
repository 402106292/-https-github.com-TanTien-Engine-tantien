import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.variant" for Variant, VAR_TYPE_MATRIX4, VAR_TYPE_NUMBER3, VAR_TYPE_NUMBER4
import "blueprint.blueprint" for Blueprint
import "maths" for Matrix44

class Matrix is Node
{
	init() 
	{
		super.init(Matrix.name)

		this.imports = [
			Pin(this, "scaling",     VAR_TYPE_NUMBER3),
			Pin(this, "rotation",    VAR_TYPE_NUMBER4),
			Pin(this, "translation", VAR_TYPE_NUMBER3),
		]
		this.exports = [
			Pin(this, "mat", VAR_TYPE_MATRIX4),
		]

		this.layout()
	}

	calc_value(idx) 
	{
		var mat = Matrix44.init()

		var v_scaling = Blueprint.calc_input_value(this, 0)
		if (v_scaling) {
			mat.scale(v_scaling.value.x, v_scaling.value.y, v_scaling.value.z)
		}

		var v_rotation = Blueprint.calc_input_value(this, 1)
		if (v_rotation) 
		{
			var rot_mat = Matrix44.init()
			rot_mat.from_quaternion(v_rotation.value.x, v_rotation.value.y, v_rotation.value.z, v_rotation.value.w)
			mat.transform_mat4(rot_mat)
		}

		var v_translation = Blueprint.calc_input_value(this, 2)
		if (v_translation) {
			mat.translate(v_translation.value.x, v_translation.value.y, v_translation.value.z)	
		}

		return Variant(VAR_TYPE_MATRIX4, mat)
	}
}