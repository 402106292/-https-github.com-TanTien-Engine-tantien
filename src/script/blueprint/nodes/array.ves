import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.blueprint" for Blueprint
import "blueprint.variant" for Variant, VAR_TYPE_NUMBER, VAR_TYPE_ANY, VAR_TYPE_ARRAY
import "blueprint.node_param" for NodeParam

class Array is Node
{
	init() 
	{
		super.init(Array.name)

		this.imports = [
			Pin(this, "index", VAR_TYPE_NUMBER)
		]
		this.exports = [
			Pin(this, "all", VAR_TYPE_ARRAY),
			Pin(this, "one", VAR_TYPE_ANY)
		]

		this.params.add(NodeParam("serialize", false))

		this.layout()

		this.list = []
	}

	calc_value(idx) 
	{
		if (idx == 0) {
			return Variant(VAR_TYPE_ARRAY, this.list)
		} else if (idx == 1) {
			var v_index = Blueprint.calc_input_value(this, 0)
			if (v_index) {
				var idx = v_index.value
				if (idx < this.list.count) {
					return Variant(VAR_TYPE_ANY, this.list[idx])
				}			
			}
		}
		return nil
	}

	to_string(name) 
	{
		var serialize = this.query_param("serialize").value
		if (serialize) {
			return "\n%(name).list = %(this.list)\n"
		} else {
			return ""
		}
	}
}