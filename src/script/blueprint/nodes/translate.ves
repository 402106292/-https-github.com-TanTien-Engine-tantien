import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.variant" for Variant, VAR_TYPE_MATRIX4, VAR_TYPE_NUMBER3
import "blueprint.node_layout" for DEFAULT_HEIGHT
import "gui" for GUI
import "maths.vector" for Vector3
import "maths" for Matrix44

class Translate is Node
{
	init()
	{
		super.init(Translate.name)

		this.imports = [
			Pin(this, "mat", VAR_TYPE_MATRIX4),
			Pin(this, "offset", VAR_TYPE_NUMBER3),
		]
		this.exports = [
			Pin(this, "mat", VAR_TYPE_MATRIX4),
		]

		this.layout()

		this.dx = 0
		this.dy = 0
		this.dz = 0

		this.region = 10
	}

	calc(idx) 
	{
		var mat = Matrix44.init()
		var conns = this.imports[0].conns
		if (!conns.isEmpty) {
			var f_pin = conns.front().from
			mat = f_pin.node.calc(f_pin.slot_idx).value
		}

		conns = this.imports[1].conns
		if (!conns.isEmpty) 
		{
			var f_pin = conns.front().from
			var offset = f_pin.node.calc(f_pin.slot_idx).value
			if (offset is Vector3)
			{
				this.dx = offset.x
				this.dy = offset.y
				this.dz = offset.z
			}
			else if (offset is List)
			{
				this.dx = offset[0]
				this.dy = offset[1]
				this.dz = offset[2]
			}
		}

		var offset = this.region * 0.5
		mat.translate(this.dx - offset, this.dy - offset, this.dz - offset)
		return Variant(VAR_TYPE_MATRIX4, mat)
	}

	layout()
	{
		super.layout()

		this.style.height = this.style.height + DEFAULT_HEIGHT * 3
	}

	toString(name) {
		return "
%(name).dx = %(this.dx)
%(name).dy = %(this.dy)
%(name).dz = %(this.dz)
"
	}

	drawGUI(ctx) 
	{
		var dirty = false

		var x = this.pos.x - this.style.width * 0.5
		var y = this.pos.y + this.style.height * 0.5 - this.calcPanelHeight() - DEFAULT_HEIGHT

		var dx = GUI.slider(ctx, "dx", this.dx, x, y, this.style.width - 20, this.region, false)
		if (dx != this.dx) {
			this.dx = dx
			dirty = true
		}
		y = y - DEFAULT_HEIGHT

		var dy = GUI.slider(ctx, "dy", this.dy, x, y, this.style.width - 20, this.region, false)
		if (dy != this.dy) {
			this.dy = dy
			dirty = true
		}
		y = y - DEFAULT_HEIGHT

		var dz = GUI.slider(ctx, "dz", this.dz, x, y, this.style.width - 20, this.region, false)
		if (dz != this.dz) {
			this.dz = dz
			dirty = true
		}
		y = y - DEFAULT_HEIGHT

		return dirty
	}
}