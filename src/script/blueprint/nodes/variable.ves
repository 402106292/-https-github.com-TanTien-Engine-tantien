import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.variant" for VAR_TYPE_ANY, VAR_TYPE_NUMBER, VAR_TYPE_NUMBER2, VAR_TYPE_NUMBER3, VAR_TYPE_NUMBER4
import "blueprint.node_helper" for NodeHelper

class Variable is Node
{
	init() 
	{
		super.init(Variable.name)

		this.exports = [
			Pin(this, "var", VAR_TYPE_ANY),
		]

		this.layout()

		this.var_name = "variable"
		this.var_type = VAR_TYPE_NUMBER

		this.inst = nil
	}

	setup()
	{
		this.inst = nil	
	}

	calc_inst(idx, ctx) 
	{
		if (!this.inst) 
		{
			if (this.var_type == VAR_TYPE_NUMBER) {
				this.inst = ctx.func.variable_float(this.var_name)
			} else if (this.var_type == VAR_TYPE_NUMBER2) {
				this.inst = ctx.func.variable_float2(this.var_name)
			} else if (this.var_type == VAR_TYPE_NUMBER3) {
				this.inst = ctx.func.variable_float3(this.var_name)
			} else if (this.var_type == VAR_TYPE_NUMBER4) {
				this.inst = ctx.func.variable_float4(this.var_name)
			}
		}

		return this.inst
	}

	to_string(name) 
	{
		var type_str = NodeHelper.var_type_to_string(this.var_type)
		return "
%(name).var_name = \"%(this.var_name)\"
%(name).var_type = %(type_str)
"
	}

	get_title()
	{
		if (this.var_name == "variable") {
			return super.get_title()
		} else {
			return "%(this.var_name)(V)"
		}
	}	
}