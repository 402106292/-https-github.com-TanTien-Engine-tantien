import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.variant" for Variant, VAR_TYPE_PORT, VAR_TYPE_ANY, VAR_TYPE_ARRAY
import "blueprint.blueprint" for Blueprint
import "blueprint.node_param" for NodeParam

class ListAdd is Node
{
	init() 
	{
		super.init()

		this.imports = [
			Pin(this, "prev", VAR_TYPE_PORT),
			Pin(this, "list", VAR_TYPE_ARRAY),
			Pin(this, "add", [ VAR_TYPE_ANY, VAR_TYPE_ARRAY ]),
		]
		this.exports = [
			Pin(this, "next", VAR_TYPE_PORT),
		]

		this.params.add(NodeParam("unique", false))

		this.layout()
	}

	execute_run() 
	{
		var v_list = Blueprint.calc_input_value(this, 1)
		var v_more = Blueprint.calc_input_value(this, 2)
		if (!v_list or !v_more) {
			return
		}

		var unique = this.query_param("unique").value

		if (v_more.value is List) {
			for (var item in v_more.value) {
				this.add(v_list.value, item, unique)
			}
		} else {
			this.add(v_list.value, v_more, unique)
		}
	}

	add(list, item, unique)
	{
		if (unique)
		{
			for (var v in list) {
				if (v.value.equal(item.value)) {
					return
				}
			}
			list.add(item)
		}
		else
		{
			list.add(item)
		}
	}
}