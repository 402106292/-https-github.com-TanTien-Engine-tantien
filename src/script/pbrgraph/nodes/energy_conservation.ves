import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction

var CODE = "
// from https://learnopengl.com/PBR/Lighting
vec3 energy_conservation(vec3 F, float metallic)
{
	// kS is equal to Fresnel
	vec3 kS = F;
	// for energy conservation, the diffuse and specular light can't
	// be above 1.0 (unless the surface emits light); to preserve this
	// relationship the diffuse component (kD) should equal 1.0 - kS.
	vec3 kD = vec3(1.0) - kS;
	// multiply kD by the inverse metalness such that only non-metals 
	// have diffuse lighting, or a linear blend if partly metal (pure metals
	// have no diffuse light).
	kD *= 1.0 - metallic;  

	return kD;
}
"

class EnergyConservation is Node
{
	init()
	{
		super.init()

		this.node_func = NodeFunction(this, "pixel", CODE, "glsl", "energy_conservation", [
			["metallic", 0.0],
		])
	}
}