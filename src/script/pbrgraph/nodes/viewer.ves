import "blueprint.node" for Node
import "blueprint.blueprint" for Blueprint
import "blueprint.pin" for Pin
import "blueprint.variant" for VAR_TYPE_NODE
import "rendergraph.variant" for VarModel, VAR_TYPE_MODEL
import "editor.rendergraph" for Rendergraph
import "editor.node_cache" for NODE_CACHE

class Viewer is Node
{
	init() 
	{
		super.init(Viewer.name)

		this.imports = [
			Pin(this, "model",  VAR_TYPE_MODEL),
			Pin(this, "cam", VAR_TYPE_NODE),
		]

		this.layout()

		this.draw_node = nil
	}

	execute()
	{
		if (!this.draw_node)
		{		
			var draw_editor = Rendergraph()
			this.draw_node = NODE_CACHE.fetch("assets/rendergraph/draw_model.ves", draw_editor)
			//Blueprint.connect(this.hf_proxy, "tex", this.draw_node_gray, "tes_heightmap")
		}

		var cam = Blueprint.calc_input_value(this, 1)
		if (cam and cam.value) {
			Blueprint.connect(cam.value, "this", this.draw_node, "view_cam")
		}

		this.draw_node.execute()
	}
}