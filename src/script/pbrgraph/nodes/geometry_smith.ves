import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction

var CODE = "
// from https://learnopengl.com/PBR/Lighting
float geometry_schlick_ggx(float NdotV, float roughness)
{
    float r = (roughness + 1.0);
    float k = (r*r) / 8.0;

    float nom   = NdotV;
    float denom = NdotV * (1.0 - k) + k;

    return nom / denom;
}
float geometry_smith(vec3 N, vec3 V, vec3 L, float roughness)
{
    float NdotV = max(dot(N, V), 0.0);
    float NdotL = max(dot(N, L), 0.0);
    float ggx2 = geometry_schlick_ggx(NdotV, roughness);
    float ggx1 = geometry_schlick_ggx(NdotL, roughness);

    return ggx1 * ggx2;
}
"

class GeometrySmith is Node
{
	init()
	{
		super.init(GeometrySmith.name)

		this.node_func = NodeFunction(this, CODE, "geometry_smith", [])	
	}
}