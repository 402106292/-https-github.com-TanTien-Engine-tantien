import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction

var CODE = "
vec3 calc_ibl(samplerCube irradianceMap, samplerCube prefilterMap, sampler2D brdfLUT, vec3 albedo, float metallic, float roughness, float ao, vec3 N, vec3 V, vec3 F)
{
    vec3 kS = F;
    vec3 kD = 1.0 - kS;
    kD *= 1.0 - metallic;  

    vec3 irradiance = texture(irradianceMap, N).rgb;
    vec3 diffuse    = irradiance * albedo;
	
	vec3 R = reflect(-V, N); 

    const float MAX_REFLECTION_LOD = 4.0;
    vec3 prefilteredColor = textureLod(prefilterMap, R,  roughness * MAX_REFLECTION_LOD).rgb;
    vec2 brdf  = texture(brdfLUT, vec2(max(dot(N, V), 0.0), roughness)).rg;
    vec3 specular = prefilteredColor * (F * brdf.x + brdf.y);

    vec3 ambient = (kD * diffuse + specular) * ao;

    return ambient;
}
"

class Ibl is Node
{
	init()
	{
		super.init(Ibl.name)

		this.node_func = NodeFunction(this, CODE, "calc_ibl", [])
	}
}