import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction
import "maths.vector" for Vector3

var CODE = "
// from https://iquilezles.org/www/articles/distfunctions/distfunctions.htm
float box_frame(vec3 p, vec3 b, float e)
{
	p = abs(p)-b;
	vec3 q = abs(p+e)-e;
	return min(min(
		length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),
		length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),
		length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));
}
"

class BoxFrame is Node
{
	init() 
	{
		super.init(BoxFrame.name)

		this.node_func = NodeFunction(this, CODE, "box_frame", [
			["b", Vector3(0.8, 0.8, 0.8)],
			["e", 0.05],
		])
	}
}