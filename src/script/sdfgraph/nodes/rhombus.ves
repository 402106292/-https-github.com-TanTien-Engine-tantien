import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction

var CODE = "
// from https://iquilezles.org/www/articles/distfunctions/distfunctions.htm
float ndot(in vec2 a, in vec2 b) { return a.x * b.x - a.y * b.y; }
float rhombus(vec3 p, float la, float lb, float h, float ra)
{
    p = abs(p);
    vec2 b = vec2(la, lb);
    float f = clamp((ndot(b, b - 2.0 * p.xz)) / dot(b, b), -1.0, 1.0);
    vec2 q = vec2(length(p.xz - 0.5 * b * vec2(1.0 - f, 1.0 + f)) * sign(p.x * b.y + p.z * b.x - b.x * b.y) - ra, p.y - h);
    return min(max(q.x, q.y), 0.0) + length(max(q, 0.0));
}
"

class Rhombus is Node
{
	init() 
	{
		super.init(Rhombus.name)

		this.node_func = NodeFunction(this, CODE, "rhombus", [
			["la", 0.4],
			["lb", 0.8],
			["h", 0.1],
			["ra", 0.2],			
		])
	}
}