import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction
import "maths.vector" for Vector2

var CODE = "
// from https://iquilezles.org/www/articles/distfunctions/distfunctions.htm
float hex_prism(vec3 p, vec2 h)
{
    const vec3 k = vec3(-0.8660254, 0.5, 0.57735);
    p = abs(p);
    p.xy -= 2.0 * min(dot(k.xy, p.xy), 0.0) * k.xy;
    vec2 d = vec2(length(p.xy - vec2(clamp(p.x, -k.z * h.x, k.z * h.x), h.x)) * sign(p.y - h.x), p.z - h.y);
    return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));
}
"

class HexagonalPrism is Node
{
	init() 
	{
		super.init(HexagonalPrism.name)

		this.node_func = NodeFunction(this, "pixel", CODE, "glsl", "hex_prism", [
			["h", Vector2(0.5, 0.5)],
		])
	}
}