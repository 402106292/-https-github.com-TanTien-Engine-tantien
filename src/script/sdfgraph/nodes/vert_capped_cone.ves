import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction

var CODE = "
// from https://iquilezles.org/www/articles/distfunctions/distfunctions.htm
float dot2( in vec2 v ) { return dot(v,v); }
float vert_capped_cone(vec3 p, float h, float r1, float r2)
{
    vec2 q = vec2(length(p.xz), p.y);
    vec2 k1 = vec2(r2, h);
    vec2 k2 = vec2(r2 - r1, 2.0 * h);
    vec2 ca = vec2(q.x - min(q.x, (q.y < 0.0) ? r1 : r2), abs(q.y) - h);
    vec2 cb = q - k1 + k2 * clamp(dot(k1 - q, k2) / dot2(k2), 0.0, 1.0);
    float s = (cb.x < 0.0 && ca.y < 0.0) ? -1.0 : 1.0;
    return s * sqrt(min(dot2(ca), dot2(cb)));
}
"

class VertCappedCone is Node
{
	init() 
	{
		super.init()

		this.node_func = NodeFunction(this, "pixel", CODE, "glsl", "vert_capped_cone", [
			["h", 0.5],
			["r1", 0.5],
			["r2", 0.25],			
		])
	}
}