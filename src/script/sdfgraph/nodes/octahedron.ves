import "blueprint.node" for Node
import "shadergraph.node_function" for NodeFunction

var CODE = "
// from https://iquilezles.org/www/articles/distfunctions/distfunctions.htm
float octahedron(vec3 p, float s)
{
    p = abs(p);
    float m = p.x + p.y + p.z - s;
    vec3 q;
    if (3.0 * p.x < m) q = p.xyz;
    else if (3.0 * p.y < m) q = p.yzx;
    else if (3.0 * p.z < m) q = p.zxy;
    else return m * 0.57735027;
    
    float k = clamp(0.5 * (q.z - q.y + s), 0.0, s); 
    return length(vec3(q.x, q.y - s + k, q.z - k)); 
}

// bound (not exact)
float octahedron2(vec3 p, float s)
{
  p = abs(p);
  return (p.x+p.y+p.z-s)*0.57735027;
}
"

class Octahedron is Node
{
	init() 
	{
		super.init(Octahedron.name)

		this.node_func = NodeFunction(this, CODE, "octahedron", [
			["s", 0.6],			
		])
	}
}