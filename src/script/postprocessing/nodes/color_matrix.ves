import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction
import "maths.vector" for Vector3

var CODE = "
// from https://github.com/crosire/reshade-shaders
/**
 * Color Matrix version 1.0
 * by Christian Cann Schuldt Jensen ~ CeeJay.dk
 *
 * ColorMatrix allow the user to transform the colors using a color matrix
 */

uniform __UBO__
{
    vec3 red;
    vec3 green;
    vec3 blue;
    
    float strength;
};

vec3 color_matrix_pass(vec3 color)
{
    mat3 ColorMatrix = mat3(red, green, blue);
    vec3 ret = mix(color, ColorMatrix * color, strength);

    return clamp(ret, 0.0, 1.0);
}
"

class ColorMatrix is Node
{
	init() 
	{
		super.init(ColorMatrix.name)

		this.node_func = NodeFunction(this, CODE, "color_matrix_pass", [
            [ "red",      Vector3(0.817, 0.183, 0.000) ],
            [ "green",    Vector3(0.333, 0.667, 0.000) ],
            [ "blue",     Vector3(0.000, 0.125, 0.875) ],  
            [ "strength", 1.0, { "min" : 0.0, "max" : 1.0 } ],
        ])
	}
}