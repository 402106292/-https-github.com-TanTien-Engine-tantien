import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction
import "maths.vector" for Vector2

var CODE = "
// from https://github.com/crosire/reshade-shaders
/**
 * Chromatic Aberration
 * by Christian Cann Schuldt Jensen ~ CeeJay.dk
 *
 * Distorts the image by shifting each color component, which creates color artifacts similar to those in a very cheap lens or a cheap sensor.
 */

uniform UBO
{
    vec2 pixel_size;

    vec2 shift;
    float strength;
};

vec3 chromatic_aberration_pass(sampler2D tex, vec2 texcoord)
{
    vec3 color = texture(tex, texcoord).rgb;
    vec3 old_color = color;
    // Sample the color components
    color.r = texture(tex, texcoord + (pixel_size * shift)).r;
    color.g = old_color.g;
    color.b = texture(tex, texcoord - (pixel_size * shift)).b;

    // Adjust the strength of the effect
    return mix(old_color, color, strength);
}
"

class ChromaticAberration is Node
{
	init() 
	{
		super.init(ChromaticAberration.name)

		this.node_func = NodeFunction(this, CODE, "chromatic_aberration_pass", [
            [ "shift", Vector2(2.5, -0.5), { "min" : -10.0, "max" : 10.0 } ],
            [ "strength", 0.5, { "min" : 0.0, "max" : 1.0 } ],
        ])
	}
}