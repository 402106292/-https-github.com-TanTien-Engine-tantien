import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction
import "maths.vector" for Vector3

var CODE = "
// from https://github.com/CeeJayDK/SweetFX
/*------------------.
| :: Description :: |
'-------------------/

	Monochrome (version 1.1)

	Author: CeeJay.dk
	License: MIT

	About:
	Removes color making everything monochrome.

	Ideas for future improvement:
	* Tinting
	* Select a hue to keep its color, thus making it stand out against a monochrome background
	* Try Lab colorspace
	* Apply color gradient
	* Add an option to normalize the coefficients
	* Publish best-selling book titled \"256 shades of grey\"

	History:
	(*) Feature (+) Improvement	(x) Bugfix (-) Information (!) Compatibility
	
	Version 1.0
	* Converts image to monochrome
	* Allows users to add saturation back in.

	Version 1.1 
	* Added many presets based on B/W camera films
	+ Improved settings UI
	! Made settings backwards compatible with SweetFX

*/

uniform int preset;
uniform float3 custom_coefficients;
uniform float saturation;

float3 monochrome_pass(float3 color : COLOR) : SV_Target
{
	float3 Coefficients = float3(0.21, 0.72, 0.07);

	float3 Coefficients_array[18] = 
	{
		custom_coefficients, //Custom
		float3(0.21, 0.72, 0.07), //sRGB monitor
		float3(0.3333333, 0.3333334, 0.3333333), //Equal weight
		float3(0.18, 0.41, 0.41), //Agfa 200X
		float3(0.25, 0.39, 0.36), //Agfapan 25
		float3(0.21, 0.40, 0.39), //Agfapan 100
		float3(0.20, 0.41, 0.39), //Agfapan 400 
		float3(0.21, 0.42, 0.37), //Ilford Delta 100
		float3(0.22, 0.42, 0.36), //Ilford Delta 400
		float3(0.31, 0.36, 0.33), //Ilford Delta 400 Pro & 3200
		float3(0.28, 0.41, 0.31), //Ilford FP4
		float3(0.23, 0.37, 0.40), //Ilford HP5
		float3(0.33, 0.36, 0.31), //Ilford Pan F
		float3(0.36, 0.31, 0.33), //Ilford SFX
		float3(0.21, 0.42, 0.37), //Ilford XP2 Super
		float3(0.24, 0.37, 0.39), //Kodak Tmax 100
		float3(0.27, 0.36, 0.37), //Kodak Tmax 400
		float3(0.25, 0.35, 0.40) //Kodak Tri-X
	};

	Coefficients = Coefficients_array[preset];

	// Calculate monochrome
	float3 grey = dot(Coefficients, color);

	// Adjust the remaining saturation
	color = lerp(grey, color, saturation);

	// Return the result
	return saturate(color);
}
"

class Monochrome is Node
{
	init() 
	{
		super.init(Monochrome.name)

		this.node_func = NodeFunction(this, CODE, "hlsl", "monochrome_pass", [
			[ "custom_coefficients", Vector3(0.21, 0.72, 0.07) ],
			[ "preset", 0, { "integer" : true, "min" : 0, "max" : 17 } ],	// 0: Custom, 1: Monitor or modern TV, 2: Equal weight, 3: Agfa 200X, 4: Agfapan 25, 5: Agfapan 100, 6: Agfapan 400, 7: Ilford Delta 100, 8: Ilford Delta 400, 9: Ilford Delta 400 Pro & 3200, 10: Ilford FP4, 11: Ilford HP5, 12: Ilford Pan F, 13: Ilford SFX, 14: Ilford XP2 Super, 15: Kodak Tmax 100, 16: Kodak Tmax 400, 17: Kodak Tri-X
			[ "saturation", 0.0, { "min" : 0.0, "max" : 1.0 } ],
		])
	}
}