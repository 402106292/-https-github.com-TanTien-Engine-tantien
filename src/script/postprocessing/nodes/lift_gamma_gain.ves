import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction
import "maths.vector" for Vector3

var CODE = "
// from https://github.com/crosire/reshade-shaders
/**
 * Lift Gamma Gain version 1.1
 * by 3an and CeeJay.dk
 */

uniform float3 rgb_lift;
uniform float3 rgb_gamma;
uniform float3 rgb_gain;

float3 lift_gamma_gain_pass(float3 color : COLOR) : SV_Target
{    
    // -- Lift --
    color = color * (1.5 - 0.5 * rgb_lift) + 0.5 * rgb_lift - 0.5;
    color = saturate(color); // Is not strictly necessary, but does not cost performance
    
    // -- Gain --
    color *= rgb_gain; 
    
    // -- Gamma --
    color = pow(abs(color), 1.0 / rgb_gamma);
    
    return saturate(color);
}
"

class LiftGammaGain is Node
{
	init() 
	{
		super.init(LiftGammaGain.name)

		this.node_func = NodeFunction(this, CODE, "hlsl", "lift_gamma_gain_pass", [
            [ "rgb_lift",  Vector3(1.0, 1.0, 1.0), { "min" : 0.0, "max" : 2.0 } ],
            [ "rgb_gamma", Vector3(1.0, 1.0, 1.0), { "min" : 0.0, "max" : 2.0 } ],
            [ "rgb_gain",  Vector3(1.0, 1.0, 1.0), { "min" : 0.0, "max" : 2.0 } ],        
        ])
	}
}