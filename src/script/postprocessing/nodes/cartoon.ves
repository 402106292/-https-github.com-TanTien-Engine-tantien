import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction
import "maths.vector" for Vector2, Vector3

var CODE = "
// from https://github.com/CeeJayDK/SweetFX
/**
 * Cartoon
 * by Christian Cann Schuldt Jensen ~ CeeJay.dk
 */

#include \"assets/shaders/reshade_adapter.hlsl\"

SamplerState g_sampler;
Texture2D g_texture;

uniform float power;
uniform float edge_slope;

float3 cartoon_pass(float2 texcoord : TEXCOORD) : SV_Target
{
    float3 color = g_texture.Sample(g_sampler, texcoord).rgb;
    const float3 coefLuma = float3(0.2126, 0.7152, 0.0722);

    float diff1 = dot(coefLuma, g_texture.Sample(g_sampler, texcoord + BUFFER_PIXEL_SIZE).rgb);
    diff1 = dot(float4(coefLuma, -1.0), float4(g_texture.Sample(g_sampler, texcoord - BUFFER_PIXEL_SIZE).rgb , diff1));
    float diff2 = dot(coefLuma, g_texture.Sample(g_sampler, texcoord + BUFFER_PIXEL_SIZE * float2(1, -1)).rgb);
    diff2 = dot(float4(coefLuma, -1.0), float4(g_texture.Sample(g_sampler, texcoord + BUFFER_PIXEL_SIZE * float2(-1, 1)).rgb , diff2));

    float edge = dot(float2(diff1, diff2), float2(diff1, diff2));

    return saturate(pow(abs(edge), edge_slope) * -power + color);
}
"

class Cartoon is Node
{
	init() 
	{
		super.init()

		this.node_func = NodeFunction(this, "pixel", CODE, "hlsl", "cartoon_pass", [
            [ "power",      1.5, { "min" : 0.1, "max" : 10.0 } ],
            [ "edge_slope", 1.5, { "min" : 0.1, "max" : 6.0 } ],
        ])
	}
}