import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction
import "maths.vector" for Vector2, Vector3

var CODE = "
// from https://github.com/CeeJayDK/SweetFX
/**
 * Border version 1.4.1
 *
 * -- Version 1.0 by Oomek --
 * Fixes light, one pixel thick border in some games when forcing MSAA like i.e. Dishonored
 * -- Version 1.1 by CeeJay.dk --
 * Optimized the shader. It still does the same but now it runs faster.
 * -- Version 1.2 by CeeJay.dk --
 * Added border_width and border_color features
 * -- Version 1.3 by CeeJay.dk --
 * Optimized the performance further
 * -- Version 1.4 by CeeJay.dk --
 * Added the border_ratio feature
 * -- Version 1.4.1 by CeeJay.dk --
 * Cleaned up setting for Reshade 3.x
 */

#include \"assets/shaders/reshade_adapter.hlsl\"

uniform float2 border_width;
uniform float  border_ratio;
uniform float3 border_color;

float3 border_pass(float3 color : COLOR, float2 texcoord : TexCoord) : SV_Target
{
    // -- calculate the right border_width for a given border_ratio --
    float2 border_width_variable = border_width;
    if (border_width.x == -border_width.y) // If width is not used
    {
        if (BUFFER_ASPECT_RATIO < border_ratio) {
            border_width_variable = float2(0.0, (BUFFER_HEIGHT - (BUFFER_WIDTH / border_ratio)) * 0.5);
        } else {
            border_width_variable = float2((BUFFER_WIDTH - (BUFFER_HEIGHT * border_ratio)) * 0.5, 0.0);
        }    
    }

    float2 border = (BUFFER_PIXEL_SIZE * border_width_variable); // Translate integer pixel width to floating point
    float2 within_border = saturate((-texcoord * texcoord + texcoord) - (-border * border + border)); // Becomes positive when inside the border and zero when outside

    return all(within_border) ? color : border_color;
}
"

class Border is Node
{
	init() 
	{
		super.init()

		this.node_func = NodeFunction(this, "pixel", CODE, "hlsl", "border_pass", [
            [ "border_width", Vector2(0.1, 0.1) ],
            [ "border_ratio", 1.35 ],
            [ "border_color", Vector3(0.0, 0.0, 0.0) ],
        ])
	}
}