import "blueprint.node" for Node
import "blueprint.node_function" for NodeFunction

var CODE = "
// from https://github.com/prod80/prod80-ReShade-Repository

#include \"assets/shaders/color_spaces.hlsl\"

uniform uint Kelvin;
uniform float LumPreservation;
uniform float kMix;

float4 color_temperature_pass(float4 color : COLOR) : SV_Target
{
    float3 kColor    = KelvinToRGB( Kelvin );
    float3 oLum      = RGBToHSL( color.xyz );
    float3 blended   = lerp( color.xyz, color.xyz * kColor.xyz, kMix );
    float3 resHSV    = RGBToHSL( blended.xyz );
    float3 resRGB    = HSLToRGB( float3( resHSV.xy, oLum.z ));
    color.xyz        = LumPreservation ? resRGB.xyz : blended.xyz;
    return float4( color.xyz, 1.0f );
}

"

class ColorTemperature is Node
{
	init() 
	{
		super.init()

		this.node_func = NodeFunction(this, "pixel", CODE, "hlsl", "color_temperature_pass", [
            [ "Kelvin", 6500, { "integer" : true, "min" : 1000, "max" : 40000 } ],      // Color Temp (K)
            [ "LumPreservation", 1.0, { "min" : 0.0, "max" : 1.0 } ],                   // Luminance Preservation
            [ "kMix", 1.0, { "min" : 0.0, "max" : 1.0 } ],                              // Mix with Original
        ])
	}
}