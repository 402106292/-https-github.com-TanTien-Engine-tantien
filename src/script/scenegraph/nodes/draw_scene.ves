import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.blueprint" for Blueprint
import "blueprint.variant" for VAR_TYPE_PORT, VAR_TYPE_ARRAY
import "scenegraph.variant" for VAR_TYPE_SPRITE
import "rendergraph.variant" for VarTexture
import "maths" for Matrix2D
import "render" for Texture2D
import "graphics" for Graphics

class DrawScene is Node
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "prev", VAR_TYPE_PORT),
			Pin(this, "obj",  [ VAR_TYPE_SPRITE, VAR_TYPE_ARRAY ]),
		]
		this.exports = [
			Pin(this, "next", VAR_TYPE_PORT)
		]

		this.layout()
	}

	render_run() 
	{
		var v_obj = Blueprint.calc_input_value(this, 1)
		if (v_obj) {
			this.draw_impl(v_obj)
		}
	}

	draw_impl(v_obj)
	{
		if (v_obj.type == VAR_TYPE_ARRAY)
		{
			for (var v in v_obj.value) {
				this.draw_impl(v)
			}
		}
		else if (v_obj.type == VAR_TYPE_SPRITE)
		{
			var mat = v_obj.value.transform
			this.draw_spr(v_obj.value, mat)
		}
	}	

	draw_spr(spr, mat)
	{
		if (spr.symbol)
		{
			if (spr.symbol is VarTexture) 
			{
				var tex = spr.symbol.tex
				if (tex) {
					Graphics.draw_texture2(tex, mat)				
				}
			}
		}
		else
		{
			for (var child in spr.children) 
			{
				var c_mat = Matrix2D.init()
				c_mat.transform_mat(child.transform)
				c_mat.transform_mat(mat)				
				this.draw_spr(child, c_mat)
			}
		}
	}
}