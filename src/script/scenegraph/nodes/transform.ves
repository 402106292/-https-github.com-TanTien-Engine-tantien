import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.variant" for VAR_TYPE_PORT, VAR_TYPE_NUMBER, VAR_TYPE_NUMBER2
import "blueprint.blueprint" for Blueprint
import "blueprint.variant" for Variant
import "scenegraph.variant" for VAR_TYPE_SPRITE, VarSprite
import "maths" for Matrix2D

class Transform is Node
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "spr",       VAR_TYPE_SPRITE),
			Pin(this, "translate", VAR_TYPE_NUMBER2),
			Pin(this, "rotate",    VAR_TYPE_NUMBER),
			Pin(this, "scale",     VAR_TYPE_NUMBER2),
			Pin(this, "shear",     VAR_TYPE_NUMBER2),
		]
		this.exports = [
			Pin(this, "spr", VAR_TYPE_SPRITE)
		]

		this.layout()
	}

	on_pin_dirty(pin)
	{
		if (pin.is_input) {
			Blueprint.send_pin_dirty(this.exports[0])
		}
	}

	calc_value(idx)
	{
		var v_spr = Blueprint.calc_input_value(this, 0)
		if (!v_spr) {
			return nil
		}

		var x = 0
		var y = 0
		var v_translate = Blueprint.calc_input_value(this, 1)
		if (v_translate) {
			x = v_translate.value.x
			y = v_translate.value.y
		}

		var angle = 0
		var v_angle = Blueprint.calc_input_value(this, 2)
		if (v_angle) {
			angle = v_angle.value
		}

		var sx = 1
		var sy = 1
		var v_scale = Blueprint.calc_input_value(this, 3)
		if (v_scale) {
			sx = v_scale.value.x
			sy = v_scale.value.y
		}

		var kx = 0
		var ky = 0
		var v_shear = Blueprint.calc_input_value(this, 4)
		if (v_shear) {
			kx = v_shear.value.x
			ky = v_shear.value.y
		}

		var trans_mat = Matrix2D.init()
		trans_mat.transform(x, y, angle, sx, sy, 0, 0, kx, ky)

		var src_spr = v_spr.value

		var spr = VarSprite()
		spr.children = src_spr.children
		spr.symbol   = src_spr.symbol
		spr.transform.transform_mat(src_spr.transform)
		spr.transform.transform_mat(trans_mat)

		return Variant(VAR_TYPE_SPRITE, spr)
	}
}