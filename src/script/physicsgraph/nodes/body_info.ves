import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.variant" for Variant, VAR_TYPE_INTEGER, VAR_TYPE_NUMBER2
import "blueprint.blueprint" for Blueprint
import "physicsgraph.variant" for VAR_TYPE_BODY
import "maths.vector" for Vector2

class BodyInfo is Node
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "body", VAR_TYPE_BODY),
		]
		this.exports = [
			Pin(this, "flag",            VAR_TYPE_INTEGER),
			Pin(this, "linear_velocity", VAR_TYPE_NUMBER2),
		]

		this.layout()
	}

	on_pin_dirty(pin)
	{
		if (pin == this.imports[0]) {
			for (var pin in this.exports) {
				Blueprint.send_pin_dirty(pin)
			}
		}
	}

	calc_value(idx) 
	{
		var v_body = Blueprint.calc_input_value(this, 0)
		if (!v_body) {
			return nil
		}

		if (idx == 0) 
		{
			return Variant(VAR_TYPE_INTEGER, v_body.value.body.get_flag())
		} 
		else if (idx == 1) 
		{
			var v = v_body.value.body.get_linear_velocity()
			return Variant(Vector2(v[0], v[1]))
		}

		return nil
	}
}