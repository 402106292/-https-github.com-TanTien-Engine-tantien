import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.variant" for Variant, VAR_TYPE_NUMBER2
import "blueprint.blueprint" for Blueprint
import "rendergraph.variant" for VarRenderBuffer, VAR_TYPE_RENDER_BUFFER
import "render" for RenderBuffer as tt_RenderBuffer

class RenderBuffer is Node
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "size", VAR_TYPE_NUMBER2),			
		]
		this.exports = [
			Pin(this, "rbo", VAR_TYPE_RENDER_BUFFER)
		]

		this.layout()

		this.rbo = nil

		this.width  = 0
		this.height = 0
		this.format = ""
	}

	calc_value(idx)
	{
		var ret = VarRenderBuffer()
		if (!this.rbo) {
			this.rbo = this.create_rbo()
		}
		ret.rbo = this.rbo

		return Variant(VAR_TYPE_RENDER_BUFFER, ret)
	}

	to_string(name) 
	{
		return "
%(name).init_rbo(%(this.width), %(this.height), \"%(this.format)\")
"
	}

	init_rbo(width, height, format)
	{
		this.width  = width
		this.height = height
		this.format = format
	}

	create_rbo()
	{
		var w = this.width
		var h = this.height

		if (w == 0 or h == 0)
		{
			var v_size = Blueprint.calc_input_value(this, 0)
			if (v_size) {
				w = v_size.value.x
				h = v_size.value.y
			} else {
				w  = 32
				h = 32
			}
		}

		return tt_RenderBuffer.init(w, h, this.format)
	}
}