import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.variant" for VAR_TYPE_PORT
import "rendergraph.variant_type" for VAR_TYPE_FRAME_BUFFER
import "blueprint.blueprint" for Blueprint
import "render" for Render
import "blueprint.node_layout" for DEFAULT_HEIGHT
import "gui" for GUI

class Pass is Node
{
	init()
	{
		super.init(Pass.name)

		this.imports = [
			Pin(this, "prev", VAR_TYPE_PORT),
			Pin(this, "fbo",  VAR_TYPE_FRAME_BUFFER)
		]

		this.layout()

		this.drawlist = []

		this.once = false
		this.executed = false
	}

	execute() 
	{
		if (this.once and this.executed) {
			return
		}

		var prev_fbo = nil
		var prev_vp = nil
		var v_fbo = Blueprint.get_input_value(this, 1)
		if (v_fbo) {
			v_fbo.value.bind()
		}

		for (var node in this.drawlist) {
			if (node.execute) {
				node.execute()
			}
		}

		if (v_fbo) {
			v_fbo.value.unbind()
		}

		this.executed = true
	}

	layout() 
	{
		super.layout()

		this.style.height = this.style.height + DEFAULT_HEIGHT
	}

	toString(name) {
		return "
%(name).once = %(this.once)
"
	}	

	drawGUI(ctx) 
	{
		var dirty = false

		var x = this.pos.x - this.style.width * 0.5
		var y = this.pos.y + this.style.height * 0.5 - this.calcPanelHeight() - DEFAULT_HEIGHT

		var once = GUI.checkbox(ctx, "once", this.once, x, y)
		if (once != this.once) {
			this.once = once
			dirty = true
		}

		return dirty
	}

	rebuild_drawlist()
	{
		this.drawlist = []

		var prev = Blueprint.getInputNode(this, 0)
		if (prev)
		{
			var nodes = []
			Blueprint.getPrecursorNodes(prev, nodes)

			this.drawlist = Blueprint.topoSort(nodes)
		}
	}


}