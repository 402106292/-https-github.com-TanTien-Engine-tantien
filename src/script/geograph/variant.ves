var VAR_TYPE_GEO = "geo"
var VAR_TYPE_CONS  = "constraint"

class VarGeo
{
	init()
	{
		this.init(nil, {})
	}

	init(shape, style)
	{
		this.shape = shape
		this.geo_id = -1

		this.render_style = style

		// draw
		this.pos = [0, 0]
		this.show = true
	}

	clone()
	{
		var geo = VarGeo()
		
		geo.shape = this.shape.clone()

		for (var entry in this.render_style) {
			geo.render_style[entry.key] = entry.value
		}

		geo.pos[0] = this.pos[0]
		geo.pos[1] = this.pos[1]

		geo.show = this.show

		return geo
	}

	toString()
	{
		return "::geograph::variant::VarGeo(%(this.shape.toString()), %(this.render_style))"
	}
}

class VarCons
{
	init()
	{
		this.cons = nil
		this.cons_id = -1
	}
}