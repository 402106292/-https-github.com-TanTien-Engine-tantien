import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.variant" for Variant, VAR_TYPE_TABLE
import "blueprint.blueprint" for Blueprint
import "geograph.variant" for VAR_TYPE_GEO

class Geometry is Node
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "geo", VAR_TYPE_GEO),
		]
		this.exports = [
			Pin(this, "gltf", VAR_TYPE_TABLE)
		]

		this.layout()
	}

	on_pin_dirty(pin)
	{
		if (pin.is_input) {
			Blueprint.send_pin_dirty(this.exports[0])
		}
	}

	calc_value(idx)
	{
		var v_geo = Blueprint.calc_input_value(this, 0)
		if (!v_geo) {
			return nil
		}

		var gltf = v_geo.value.model
		if (!gltf) {
			return nil
		}

		var gltf_desc = gltf.get_desc()
		return Variant(gltf_desc)
	}	
}