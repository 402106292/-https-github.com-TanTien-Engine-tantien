import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.blueprint" for Blueprint
import "blueprint.node_param" for NodeParam
import "blueprint.variant" for Variant, VAR_TYPE_PORT, VAR_TYPE_NUMBER
import "geograph.variant" for VAR_TYPE_GEO, VarGeo

class CopyAndTranslate is Node
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "prev", VAR_TYPE_PORT),
			Pin(this, "geo", VAR_TYPE_GEO),
			Pin(this, "dx", VAR_TYPE_NUMBER),
			Pin(this, "dy", VAR_TYPE_NUMBER),
		]
		this.exports = [
			Pin(this, "next", VAR_TYPE_PORT),
			Pin(this, "geo", VAR_TYPE_GEO),
		]

		this.layout()
	}

	calc_value(idx)
	{
		var v_geo = Blueprint.calc_input_value(this, 1)
		if (!v_geo) {
			return nil
		}

		var dx = 0
		var dy = 0

		var v_dx = Blueprint.calc_input_value(this, 2)
		if (v_dx) {
			dx = v_dx.value
		}
		var v_dy = Blueprint.calc_input_value(this, 3)
		if (v_dy) {
			dy = v_dy.value
		}

		var new_geo = this.clone_and_trans_geo(v_geo.value, dx, dy)
		return Variant(VAR_TYPE_GEO, new_geo)
	}

	clone_and_trans_geo(geo, dx, dy)
	{
		var ret = geo.clone()
		ret.shape.translate(dx, dy)
		return ret
	}
}