import "graphics" for Graphics
import "render" for Render
import "scene.node" for Node as SceneNode
import "scene.scene" for Scene
import "scene.components.boundingbox2" for BoundingBox2
import "scene.components.transform2" for Transform2
import "blueprint.node" for Node as BlueprintNode
import "blueprint.edit_op" for EditOP as BlueprintEditOP
import "graphics.ortho_camera" for OrthoCamera
import "maths.vector" for Vector2

class Test
{
	load()
	{
		this.scene = Scene()
		this.camera = OrthoCamera()

		this.scene.add(this.new_node())

		this.editop = BlueprintEditOP(this.camera, this.scene)
	}

	update()
	{
	}

	draw()
	{
		Render.clear(["color"], { "color" : [128,128,128,128] })

		this.scene.draw()

		this.editop.draw()

		Graphics.flush()
	}

	sizechanged(w, h)
	{
		Graphics.onSize(w, h)
		this.camera.on_size(w, h)
	}

	keypressed(c)
	{
		this.editop.on_key_pressed(c)
	}

	keyreleased(c)
	{
		this.editop.on_key_released(c)
	}

	mousemoved(x, y, btn)
	{
		this.editop.on_mouse_moved(x, y, btn)
	}

	mousedragged(x, y, btn)
	{
		this.editop.on_mouse_dragged(x, y, btn)
	}

	mousepressed(x, y, btn)
	{
		this.editop.on_mouse_pressed(x, y, btn)
	}

	mousereleased(x, y, btn)
	{
		this.editop.on_mouse_released(x, y, btn)
	}

	mousescrolled(x, y, dx, dy)
	{
		this.editop.on_mouse_scrolled(x, y, dx, dy)
	}

	new_node()
	{
		var node = SceneNode()

		var bp_node = BlueprintNode("test")
		node.components["bp"] = bp_node

		var pos = Vector2(100, 50)

		var bb = BoundingBox2(bp_node.get_size())
		bb.transform(pos, 0, Vector2())
		node.components["bounding"] = bb

		var trans = Transform2()
		trans.set_position(pos)
		node.components["transform"] = trans

		return node
	}
}