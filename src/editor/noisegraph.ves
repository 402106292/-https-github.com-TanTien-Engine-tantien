import "editor.shadergraph" for Shadergraph
import "blueprint.nodes.*"
import "shadergraph.nodes.*"
import "noisegraph.nodes.*"
import "image" for ImageData
import "render" for Texture2D

class Noisegraph is Shadergraph
{
	load()
	{
		super.load(false)

		for (var node in [ 
// noise
PerlinNoise, BillowedNoise, RidgedNoise,
// turbulence
Turbulence, IqTurbulence, SwissTurbulence, JordanTurbulence, Erosion1Turbulence, Erosion2Turbulence, DistortTurbulence,
// deriv
PerlinNoisePseudoDeriv, PerlinNoiseDeriv, NoiseDeriv,
// shadergraph
TexCoord, FragColor, Multiply, Number, Uniform, Parameter,
		]) {
			super.add_popup_node(node)
		}

		var perlin_perm2d_img = ImageData.init("assets/textures/noise/perlin_perm2d.png")
		this.perlin_perm2d_tex = Texture2D.init(perlin_perm2d_img, false)
		var perlin_grad2d_img = ImageData.init("assets/textures/noise/perlin_grad2d.png")
		this.perlin_grad2d_tex = Texture2D.init(perlin_grad2d_img, false)
	}

	draw_preview()
	{
		this.prog.set_uniform_value(["perlin_perm2d_tex", "sampler", [this.perlin_perm2d_tex, "linear_repeat"]])
		this.prog.set_uniform_value(["perlin_grad2d_tex", "sampler", [this.perlin_grad2d_tex, "linear_repeat"]])		

		super.draw_preview()
	}

	load_file_imports()
	{
		return super.load_file_imports() + "
import \"blueprint.nodes.*\"
import \"shadergraph.nodes.*\"
import \"noisegraph.nodes.*\"
"
	}
}