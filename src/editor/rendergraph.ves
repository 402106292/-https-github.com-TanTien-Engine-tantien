import "editor.editor" for Editor
import "gui" for GUI

import "rendergraph.clear" for Clear
import "rendergraph.draw" for Draw
import "rendergraph.shader" for Shader
import "rendergraph.vertex_array" for VertexArray

class Test is Editor
{
	load()
	{
		super.load()

		//this.filepath = "assets/scene/render/tmp.tt"
		this.filepath = "src/editor/samples/rendergraph/learnopengl/1.getting_started__3.1.shaders_uniform.tt"
	}

	drawPopup(x, y)
	{
		var new_node = nil

		var WIDTH = 120
		var HEIGHT = 25

		var NUM = 4
		GUI.frame(this.gui_top, x, y - HEIGHT * (NUM - 1), WIDTH, HEIGHT * NUM)
		if (GUI.selectable(this.gui_top, "Clear", false, x, y, WIDTH)) {
			new_node = Clear()
		}
		y = y - HEIGHT
		if (GUI.selectable(this.gui_top, "Draw", false, x, y, WIDTH)) {
			new_node = Draw()
		}
		y = y - HEIGHT
		if (GUI.selectable(this.gui_top, "Shader", false, x, y, WIDTH)) {
			new_node = Shader()
		}
		y = y - HEIGHT
		if (GUI.selectable(this.gui_top, "VertexArray", false, x, y, WIDTH)) 
		{
			var va = VertexArray()
			va.data = [
			    //  X    Y    Z          R    G    B
			       0.8, 0.8, 0.0,       1.0, 0.0, 0.0, // vertex 0
			      -0.8, 0.8, 0.0,       0.0, 1.0, 0.0, // vertex 1
			       0.8,-0.8, 0.0,       0.0, 0.0, 1.0, // vertex 2
			       0.8,-0.8, 0.0,       0.0, 0.0, 1.0, // vertex 3
			      -0.8, 0.8, 0.0,       0.0, 1.0, 0.0, // vertex 4
			      -0.8,-0.8, 0.0,       1.0, 0.0, 0.0, // vertex 5
			]
			va.attrs = [3, 3]
			new_node = va
		}
		y = y - HEIGHT

		return new_node
	}

	loadFileImports()
	{
		return "
import \"rendergraph.clear\" for Clear
import \"rendergraph.draw\" for Draw
import \"rendergraph.shader\" for Shader
import \"rendergraph.vertex_array\" for VertexArray
"
	}
}