import "editor.editor" for Editor
import "render" for Render
import "blueprint.blueprint" for Blueprint
import "terraingraph.node" for Node

import "terraingraph.nodes.constant" for Constant
import "terraingraph.nodes.viewer" for Viewer
import "terraingraph.nodes.gradient" for Gradient
import "terraingraph.nodes.perlin" for Perlin
import "terraingraph.nodes.worley" for Worley
import "terraingraph.nodes.combiner" for Combiner
import "terraingraph.nodes.clamp" for Clamp
import "terraingraph.nodes.gaussian" for Gaussian
import "terraingraph.nodes.incline" for Incline
import "terraingraph.nodes.inverter" for Inverter
import "terraingraph.nodes.scale_bias" for ScaleBias
import "terraingraph.nodes.step" for Step
import "terraingraph.nodes.transform" for Transform
import "terraingraph.nodes.select_height" for SelectHeight
import "terraingraph.nodes.select_slope" for SelectSlope

class Terraingraph is Editor
{
	load()
	{
		super.load()

		this.drawlist = []

		for (var node in [ Constant, Viewer, Gradient, Perlin, Worley, Combiner, Clamp, Gaussian, Incline, Inverter, ScaleBias, Step, Transform, SelectHeight, SelectSlope ]) {
			super.add_popup_node(node)
		}
	}

	rebuild()
	{
		var scene = this.scene_stack.root()

		for (var node in scene.nodes) {
			node.components["bp"].dirty = true
		}

		for (var node in scene.nodes) 
		{
			var bp_node = node.components["bp"]
			if (bp_node is Viewer) 
			{
				var prev_nodes = Blueprint.get_precursor_nodes(bp_node)
				this.drawlist = Blueprint.topo_sort(prev_nodes)
				return
			}
		}
	}

	draw_preview()
	{
		Render.clear(["color"], { "color" : [128,128,128,128] })

		if (this.scene_stack.bp_dirty) {
			this.rebuild()
			this.scene_stack.bp_dirty = false
		}

		for (var node in this.drawlist) {
			if (node.has_method("execute()")) {
				node.execute()
			}
		}
	}

	load_file_imports()
	{
		var ret = super.load_file_imports()
		ret = ret + "
import \"terraingraph.nodes.constant\" for Constant
import \"terraingraph.nodes.viewer\" for Viewer
import \"terraingraph.nodes.gradient\" for Gradient
import \"terraingraph.nodes.perlin\" for Perlin
import \"terraingraph.nodes.worley\" for Worley
import \"terraingraph.nodes.combiner\" for Combiner
import \"terraingraph.nodes.clamp\" for Clamp
import \"terraingraph.nodes.gaussian\" for Gaussian
import \"terraingraph.nodes.incline\" for Incline
import \"terraingraph.nodes.inverter\" for Inverter
import \"terraingraph.nodes.scale_bias\" for ScaleBias
import \"terraingraph.nodes.step\" for Step
import \"terraingraph.nodes.transform\" for Transform
import \"terraingraph.nodes.select_height\" for SelectHeight
import \"terraingraph.nodes.select_slope\" for SelectSlope
"
		return ret
	}
}