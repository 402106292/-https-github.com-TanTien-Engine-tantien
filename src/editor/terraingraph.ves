import "editor.editor" for Editor
import "render" for Render
import "blueprint.blueprint" for Blueprint
import "rendergraph.rendergraph" for Rendergraph
import "terraingraph.terraingraph" for Terraingraph as tg_Terraingraph
import "terraingraph.nodes.*"

class Terraingraph is Editor
{
	load()
	{
		super.load(true)

		Rendergraph.regist()
		tg_Terraingraph.regist()

		this.drawlist = []

		for (var node in [ Constant, Viewer, Gradient, Perlin, Worley, Combiner, Clamp, Gaussian, Incline, Inverter, ScaleBias, Step, Transform, SelectHeight, SelectSlope, Erosion, ThermalWeathering, Brush ]) {
			super.add_popup_node(node)
		}
	}

	rebuild()
	{
		var scene = this.scene_stack.root()

		for (var node in scene.nodes) {
			node.components["bp"].dirty = true
		}

		for (var node in scene.nodes) 
		{
			var bp_node = node.components["bp"]
			if (bp_node is Viewer) 
			{
				var prev_nodes = Blueprint.get_precursor_nodes(bp_node)
				this.drawlist = Blueprint.topo_sort(prev_nodes)
				return
			}
		}
	}

	draw_preview()
	{
		Render.clear(["color"], { "color" : [128,128,128,128] })

		if (this.scene_stack.bp_dirty) {
			this.rebuild()
			this.scene_stack.bp_dirty = false
		}

		for (var node in this.drawlist) {
			if (node.has_method("execute()")) {
				node.execute()
			}
		}
	}

	load_file_imports()
	{
		return super.load_file_imports() + "\nimport \"terraingraph.nodes.*\"\n"
	}
}